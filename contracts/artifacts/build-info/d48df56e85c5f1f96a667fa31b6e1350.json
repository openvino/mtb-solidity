{
	"id": "d48df56e85c5f1f96a667fa31b6e1350",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/mtb.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.6.12;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MTB is ERC20, ERC20Burnable, ERC20Capped, ERC20Pausable, Ownable {\r\n\r\n    constructor(\r\n        string memory name, \r\n        string memory symbol, \r\n        uint256 cap\r\n    ) \r\n        ERC20(name, symbol)\r\n        ERC20Capped(cap)\r\n        public\r\n    {\r\n        _mint(msg.sender, cap); // Minteo la totalidad del cap al creador\r\n    }\r\n\r\n    // Función para pausar las transferencias, solo permitida al propietario\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    // Función para reanudar las transferencias, solo permitida al propietario\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r\n        super._beforeTokenTransfer(from, to, amount); \r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal override(ERC20) {\r\n        super._mint(account, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./ERC20.sol\";\nimport \"../../utils/Pausable.sol\";\n\n/**\n * @dev ERC20 token with pausable token transfers, minting and burning.\n *\n * Useful for scenarios such as preventing trades until the end of an evaluation\n * period, or having an emergency switch for freezing all token transfers in the\n * event of a large bug.\n */\nabstract contract ERC20Pausable is ERC20, Pausable {\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - the contract must not be paused.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        require(!paused(), \"ERC20Pausable: token transfer while paused\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    using SafeMath for uint256;\n\n    uint256 private _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor (uint256 cap_) internal {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_beforeTokenTransfer}.\n     *\n     * Requirements:\n     *\n     * - minted tokens must not cause the total supply to go over the cap.\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {\n        super._beforeTokenTransfer(from, to, amount);\n\n        if (from == address(0)) { // When minting tokens\n            require(totalSupply().add(amount) <= cap(), \"ERC20Capped: cap exceeded\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    using SafeMath for uint256;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\");\n\n        _approve(account, _msgSender(), decreasedAllowance);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":630:7224  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xF9 0x26 0xF CODESIZE PUSH23 0x17F8A3C61D823235142789395D0039759E4F776F3B7674 REVERT SGT 0xCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE 0xF9 0x26 0xF CODESIZE PUSH23 0x17F8A3C61D823235142789395D0039759E4F776F3B7674 REVERT SGT 0xCE PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6594:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 630,
									"end": 7224,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122055f9260f387617f8a3c61d823235142789395d0039759e4f776f3b7674fd13ce64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 630,
											"end": 7224,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_19\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_21\n  swap3\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_24\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_23)\ntag_24:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_23\n  jumpi\n  swap2\n  dup3\n  add\ntag_25:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_26\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_25)\ntag_26:\ntag_23:\n  pop\n  swap1\n  pop\n  tag_27\n  swap2\n  swap1\n  tag_28\n  jump\t// in\ntag_27:\n  pop\n  swap1\n  jump\t// out\ntag_28:\ntag_29:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_29)\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1321:10795  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_28\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_33\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_39:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_39)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_42\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_42:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_58\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_66\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_68\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_68:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_76\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_79\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_80\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_79)\n    tag_80:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_81:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_81\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_84\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_85\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_86\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_59\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_64\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_99\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_69\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_76\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220bd3f1ebbd37f184285799523b3026426208876513625827f88611ecf03a6e1e864736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200139f3803806200139f833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b506040525050508160039080519060200190620001cd9291906200020b565b508060049080519060200190620001e69291906200020b565b506012600560006101000a81548160ff021916908360ff1602179055505050620002b1565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200024e57805160ff19168380011785556200027f565b828001600101855582156200027f579182015b828111156200027e57825182559160200191906001019062000261565b5b5090506200028e919062000292565b5090565b5b80821115620002ad57600081600090555060010162000293565b5090565b6110de80620002c16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bd3f1ebbd37f184285799523b3026426208876513625827f88611ecf03a6e1e864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x139F CODESIZE SUB DUP1 PUSH3 0x139F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1CD SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1E6 SWAP3 SWAP2 SWAP1 PUSH3 0x20B JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x24E JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x27F JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x27F JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x27E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x261 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x28E SWAP2 SWAP1 PUSH3 0x292 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AD JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x293 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x10DE DUP1 PUSH3 0x2C1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220BD3F 0x1E 0xBB 0xD3 PUSH32 0x184285799523B3026426208876513625827F88611ECF03A6E1E864736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1321:9474:2:-:0;;;1958:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2040:5;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;1321:9474;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461025857806370a08231146102bc57806395d89b4114610314578063a457c2d714610397578063a9059cbb146103fb578063dd62ed3e1461045f576100a9565b806306fdde03146100ae578063095ea7b31461013157806318160ddd1461019557806323b872dd146101b3578063313ce56714610237575b600080fd5b6100b66104d7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100f65780820151818401526020810190506100db565b50505050905090810190601f1680156101235780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561014757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610579565b60405180821515815260200191505060405180910390f35b61019d610597565b6040518082815260200191505060405180910390f35b61021f600480360360608110156101c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105a1565b60405180821515815260200191505060405180910390f35b61023f61067a565b604051808260ff16815260200191505060405180910390f35b6102a46004803603604081101561026e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610691565b60405180821515815260200191505060405180910390f35b6102fe600480360360208110156102d257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610744565b6040518082815260200191505060405180910390f35b61031c61078c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561035c578082015181840152602081019050610341565b50505050905090810190601f1680156103895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6103e3600480360360408110156103ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061082e565b60405180821515815260200191505060405180910390f35b6104476004803603604081101561041157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108fb565b60405180821515815260200191505060405180910390f35b6104c16004803603604081101561047557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610919565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561056f5780601f106105445761010080835404028352916020019161056f565b820191906000526020600020905b81548152906001019060200180831161055257829003601f168201915b5050505050905090565b600061058d6105866109a0565b84846109a8565b6001905092915050565b6000600254905090565b60006105ae848484610b9f565b61066f846105ba6109a0565b61066a8560405180606001604052806028815260200161101360289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106206109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b600190509392505050565b6000600560009054906101000a900460ff16905090565b600061073a61069e6109a0565b8461073585600160006106af6109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6109a8565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108245780601f106107f957610100808354040283529160200191610824565b820191906000526020600020905b81548152906001019060200180831161080757829003601f168201915b5050505050905090565b60006108f161083b6109a0565b846108ec8560405180606001604052806025815260200161108460259139600160006108656109a0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6109a8565b6001905092915050565b600061090f6109086109a0565b8484610b9f565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a2e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806110606024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ab4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610fcb6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061103b6025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610fa86023913960400191505060405180910390fd5b610cb6838383610fa2565b610d2181604051806060016040528060268152602001610fed602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e609092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610db4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f1a90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290610f0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ed2578082015181840152602081019050610eb7565b50505050905090810190601f168015610eff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b600080828401905083811015610f98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bd3f1ebbd37f184285799523b3026426208876513625827f88611ecf03a6e1e864736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x397 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3FB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x45F JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x237 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x4D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDB JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x123 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x579 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x597 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x5A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31C PUSH2 0x78C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x341 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x389 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x82E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x447 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x475 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x56F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x544 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x552 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D PUSH2 0x586 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AE DUP5 DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x66F DUP5 PUSH2 0x5BA PUSH2 0x9A0 JUMP JUMPDEST PUSH2 0x66A DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1013 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x620 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A PUSH2 0x69E PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x735 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x6AF PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x824 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x824 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x807 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F1 PUSH2 0x83B PUSH2 0x9A0 JUMP JUMPDEST DUP5 PUSH2 0x8EC DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1084 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x865 PUSH2 0x9A0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90F PUSH2 0x908 PUSH2 0x9A0 JUMP JUMPDEST DUP5 DUP5 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA2E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1060 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xAB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFCB PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x103B PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCAB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xFA8 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB6 DUP4 DUP4 DUP4 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0xD21 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xFED PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xE60 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xDB4 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xF1A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0xF0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED2 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xEFF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xF98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220BD3F 0x1E 0xBB 0xD3 PUSH32 0x184285799523B3026426208876513625827F88611ECF03A6E1E864736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "1321:9474:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5589:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2370:93;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2168:89;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;5589:215::-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;3399:125::-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;2370:93::-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;9355:340:2:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;10701:92:2:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "863600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1431",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1218",
								"decimals()": "1144",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1058",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100000000"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1321,
									"end": 10795,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd3f1ebbd37f184285799523b3026426208876513625827f88611ecf03a6e1e864736f6c634300060c0033",
									".code": [
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 10795,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 481,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 489,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 493,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 481,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 489,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 493,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol:ERC20Burnable",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol": {
				"ERC20Capped": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"constructor": {
								"details": "Sets the value of the `cap`. This value is immutable, it can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x94e4d02b80450cf26bec54be6c0cf52fe4e8ce91dfc6e97794dce19ded2a3fa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16f5115e0d29a8e2e88ef152dc49c8dfe37d484c2b7ce97ed4532889ac2bda3c\",\"dweb:/ipfs/QmZBKMdf6EdHv7XBSaiN7rgrQwTqNG5q1nD75NPM6ECZYe\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 481,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 489,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 493,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1037,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol:ERC20Capped",
								"label": "_cap",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol": {
				"ERC20Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"paused()": "5c975abb",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with pausable token transfers, minting and burning. Useful for scenarios such as preventing trades until the end of an evaluation period, or having an emergency switch for freezing all token transfers in the event of a large bug.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":\"ERC20Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xa22af140ae7ec1f8f2f3bed5869cd0d548dfaac66343f0efc7324ff34aaf1254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed479feda7354e89c095fde0927dcb581f460257bf93b7db54b2b902b4bbd48\",\"dweb:/ipfs/QmSDUhS2AQvTGXHwaxDgAXtwXKCgQh2kp1nwhwUgr2hQZK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 481,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 489,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 493,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1261,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol:ERC20Pausable",
								"label": "_paused",
								"offset": 1,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1261,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/mtb.sol": {
				"MTB": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/mtb.sol\":367:1343  contract MTB is ERC20, ERC20Burnable, ERC20Capped, ERC20Pausable, Ownable {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/mtb.sol\":450:713  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x60\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  dup4\n  dup3\n  add\n  swap2\n  pop\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  dup7\n  0x01\n  dup3\n  mul\n  dup4\n  add\n  gt\n  0x0100000000\n  dup3\n  gt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup1\n  dup4\n  mstore\n  0x20\n  dup4\n  add\n  swap3\n  pop\n  pop\n  pop\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup1\n  dup3\n  add\n  mload\n  dup2\n  dup5\n  add\n  mstore\n  0x20\n  dup2\n  add\n  swap1\n  pop\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/mtb.sol\":604:607  cap */\n  dup1\n    /* \"contracts/mtb.sol\":569:573  name */\n  dup4\n    /* \"contracts/mtb.sol\":575:581  symbol */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2040:2045  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2037  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2032:2045  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_23\n  swap3\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2065:2072  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2062  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2055:2072  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_25\n  swap3\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_25:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2094:2096  18 */\n  0x12\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2091  _decimals */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2082:2096  _decimals = 18 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1958:2103  constructor (string memory name_, string memory symbol_) public {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":467:468  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":460:464  cap_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":460:468  cap_ > 0 */\n  gt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":452:494  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n  tag_27\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x15\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332304361707065643a2063617020697320300000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":511:515  cap_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":504:508  _cap */\n  0x06\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":504:515  _cap = cap_ */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":406:522  constructor (uint256 cap_) internal {... */\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":945:950  false */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":935:942  _paused */\n  0x07\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":935:950  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":884:901  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  tag_30\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:914  _msgSender */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:916  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":884:916  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":935:944  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:932  _owner */\n  0x07\n  0x01\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":926:944  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":992:1001  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":988:989  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":959:1002  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":850:1009  constructor () internal {... */\n  pop\n    /* \"contracts/mtb.sol\":641:663  _mint(msg.sender, cap) */\n  tag_33\n    /* \"contracts/mtb.sol\":647:657  msg.sender */\n  caller\n    /* \"contracts/mtb.sol\":659:662  cap */\n  dup3\n    /* \"contracts/mtb.sol\":641:646  _mint */\n  shl(0x20, tag_34)\n    /* \"contracts/mtb.sol\":641:663  _mint(msg.sender, cap) */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"contracts/mtb.sol\":450:713  constructor(\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/mtb.sol\":367:1343  contract MTB is ERC20, ERC20Burnable, ERC20Capped, ERC20Pausable, Ownable {\r... */\n  jump(tag_35)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/mtb.sol\":1220:1340  function _mint(address account, uint256 amount) internal override(ERC20) {\r... */\ntag_34:\n    /* \"contracts/mtb.sol\":1304:1332  super._mint(account, amount) */\n  tag_38\n    /* \"contracts/mtb.sol\":1316:1323  account */\n  dup3\n    /* \"contracts/mtb.sol\":1325:1331  amount */\n  dup3\n    /* \"contracts/mtb.sol\":1304:1315  super._mint */\n  or(tag_0_84, shl(0x20, tag_39))\n    /* \"contracts/mtb.sol\":1304:1332  super._mint(account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_38:\n    /* \"contracts/mtb.sol\":1220:1340  function _mint(address account, uint256 amount) internal override(ERC20) {\r... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7934:7935  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7922  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_41\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1f\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  tag_42\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n  shl(0x20, tag_43)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  tag_44\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n  or(tag_0_85, shl(0x20, tag_45))\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  tag_46\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8123:8130  account */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n  or(tag_0_85, shl(0x20, tag_45))\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8102:8109  account */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8179:8186  account */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8175:8176  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8188:8194  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  dup3\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/mtb.sol\":1023:1212  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r... */\ntag_43:\n    /* \"contracts/mtb.sol\":1159:1203  super._beforeTokenTransfer(from, to, amount) */\n  tag_48\n    /* \"contracts/mtb.sol\":1186:1190  from */\n  dup4\n    /* \"contracts/mtb.sol\":1192:1194  to */\n  dup4\n    /* \"contracts/mtb.sol\":1196:1202  amount */\n  dup4\n    /* \"contracts/mtb.sol\":1159:1185  super._beforeTokenTransfer */\n  or(tag_0_86, shl(0x20, tag_49))\n    /* \"contracts/mtb.sol\":1159:1203  super._beforeTokenTransfer(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_48:\n    /* \"contracts/mtb.sol\":1023:1212  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n  dup1\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n  dup3\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n  dup5\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n  add\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n  dup4\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n  dup2\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n  lt\n  iszero\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x1b\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_51:\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n  dup1\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n  swap2\n  pop\n  pop\n    /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\ntag_49:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n  tag_53\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":725:729  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":731:733  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":735:741  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:724  super._beforeTokenTransfer */\n  or(tag_0_87, shl(0x20, tag_54))\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_53:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n  tag_55\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:768  paused */\n  shl(0x20, tag_56)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n  0x20\n  shr\n  jump\t// in\ntag_55:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":761:770  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":753:817  require(!paused(), \"ERC20Pausable: token transfer while paused\") */\n  tag_57\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4\n  0x2a\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_57:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":860:1173  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\ntag_54:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:1012  super._beforeTokenTransfer(from, to, amount) */\n  tag_59\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":995:999  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1001:1003  to */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1005:1011  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:994  super._beforeTokenTransfer */\n  or(tag_0_88, shl(0x20, tag_60))\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:1012  super._beforeTokenTransfer(from, to, amount) */\n  0x20\n  shr\n  jump\t// in\ntag_59:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1043:1044  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1045  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1031  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1045  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1023:1167  if (from == address(0)) { // When minting tokens... */\n  iszero\n  tag_61\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1126  cap() */\n  tag_62\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1124  cap */\n  shl(0x20, tag_63)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1126  cap() */\n  0x20\n  shr\n  jump\t// in\ntag_62:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1117  totalSupply().add(amount) */\n  tag_64\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1110:1116  amount */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1105  totalSupply() */\n  tag_65\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1103  totalSupply */\n  shl(0x20, tag_66)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1105  totalSupply() */\n  0x20\n  shr\n  jump\t// in\ntag_65:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1109  totalSupply().add */\n  or(tag_0_85, shl(0x20, tag_45))\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1117  totalSupply().add(amount) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_64:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1126  totalSupply().add(amount) <= cap() */\n  gt\n  iszero\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1084:1156  require(totalSupply().add(amount) <= cap(), \"ERC20Capped: cap exceeded\") */\n  tag_67\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x45524332304361707065643a2063617020657863656564656400000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_67:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1023:1167  if (from == address(0)) { // When minting tokens... */\ntag_61:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":860:1173  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\ntag_56:\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1099:1103  bool */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1122:1129  _paused */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1115:1129  return _paused */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\ntag_60:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":601:682  function cap() public view virtual returns (uint256) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":645:652  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":671:675  _cap */\n  sload(0x06)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":664:675  return _cap */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":601:682  function cap() public view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\ntag_66:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n  sload(0x02)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/mtb.sol\":367:1343  contract MTB is ERC20, ERC20Burnable, ERC20Capped, ERC20Pausable, Ownable {\r... */\ntag_24:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  0x1f\n  lt\n  tag_73\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_72)\ntag_73:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_72\n  jumpi\n  swap2\n  dup3\n  add\ntag_74:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_75\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_74)\ntag_75:\ntag_72:\n  pop\n  swap1\n  pop\n  tag_76\n  swap2\n  swap1\n  tag_77\n  jump\t// in\ntag_76:\n  pop\n  swap1\n  jump\t// out\ntag_77:\ntag_78:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_79\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_78)\ntag_79:\n  pop\n  swap1\n  jump\t// out\ntag_35:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4 45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564\n\nsub_0: assembly {\n        /* \"contracts/mtb.sol\":367:1343  contract MTB is ERC20, ERC20Burnable, ERC20Capped, ERC20Pausable, Ownable {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x355274ea\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_28:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_28)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_31:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_34\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":601:682  function cap() public view virtual returns (uint256) {... */\n    tag_8:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_46\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/mtb.sol\":950:1015  function unpause() public onlyOwner {\r... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_15:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_60:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_61\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/mtb.sol\":800:861  function pause() public onlyOwner {\r... */\n    tag_16:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_17:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_18:\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_68:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_68)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_71\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_71:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2213:2226  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2245:2250  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2238:2250  return _name */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2168:2257  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4327:4331  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4362  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4352:4364  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4373  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4375:4381  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4351  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4343:4382  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4399:4403  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4392:4403  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4244:4410  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3303  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3322:3334  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3334  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3235:3341  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4983:4987  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5015  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5017:5026  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5028:5034  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5008  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4999:5035  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5054:5060  sender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5072  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5062:5074  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5114:5120  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5087  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5088:5094  sender */\n      dup12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5095  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5106  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5096:5108  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5109  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5113  _allowances[sender][_msgSender()].sub */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5076:5165  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5053  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5045:5166  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5183:5187  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5176:5187  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4877:5194  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3135:3140  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3159:3168  _decimals */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3152:3168  return _decimals */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3086:3175  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":601:682  function cap() public view virtual returns (uint256) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":645:652  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":671:675  _cap */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":664:675  return _cap */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":601:682  function cap() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5677:5681  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5712  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5702:5714  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5716:5723  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5764:5774  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5736  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5747  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5737:5749  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5750  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5751:5758  spender */\n      dup10\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5759  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5763  _allowances[_msgSender()][spender].add */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5725:5775  _allowances[_msgSender()][spender].add(addedValue) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5701  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5693:5776  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5793:5797  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5786:5797  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5589:5804  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mtb.sol\":950:1015  function unpause() public onlyOwner {\r... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_116\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_117\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_117:\n        /* \"contracts/mtb.sol\":997:1007  _unpause() */\n      tag_119\n        /* \"contracts/mtb.sol\":997:1005  _unpause */\n      tag_120\n        /* \"contracts/mtb.sol\":997:1007  _unpause() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/mtb.sol\":950:1015  function unpause() public onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":579:606  _burn(_msgSender(), amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":585:597  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":585:595  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":585:597  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":599:605  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":579:584  _burn */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":579:606  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":524:613  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1099:1103  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1122:1129  _paused */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1115:1129  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1052:1136  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3473:3480  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3508  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3516  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3499:3517  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3492:3517  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3399:3524  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_129\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1823:1824  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1807:1813  _owner */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1786:1826  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1853:1854  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1842  _owner */\n      0x07\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1836:1855  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1717:1862  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":995:1021  uint256 decreasedAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      tag_133\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1061:1067  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db\n      0x24\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1056  allowance(account, _msgSender()) */\n      tag_134\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1034:1041  account */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1043:1055  _msgSender() */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1043:1053  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1043:1055  _msgSender() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1033  allowance */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1056  allowance(account, _msgSender()) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1060  allowance(account, _msgSender()).sub */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1024:1108  allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":995:1108  uint256 decreasedAllowance = allowance(account, _msgSender()).sub(amount, \"ERC20: burn amount exceeds allowance\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1119:1170  _approve(account, _msgSender(), decreasedAllowance) */\n      tag_136\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1128:1135  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1137:1149  _msgSender() */\n      tag_137\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1137:1147  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1137:1149  _msgSender() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1151:1169  decreasedAllowance */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1119:1127  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1119:1170  _approve(account, _msgSender(), decreasedAllowance) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1186:1193  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1195:1201  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1180:1185  _burn */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":1180:1202  _burn(account, amount) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":919:1209  function burnFrom(address account, uint256 amount) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/mtb.sol\":800:861  function pause() public onlyOwner {\r... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/mtb.sol\":845:853  _pause() */\n      tag_144\n        /* \"contracts/mtb.sol\":845:851  _pause */\n      tag_145\n        /* \"contracts/mtb.sol\":845:853  _pause() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/mtb.sol\":800:861  function pause() public onlyOwner {\r... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1131:1138  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1157:1163  _owner */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1150:1163  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1085:1170  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2417:2430  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2449:2456  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2442:2456  return _symbol */\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      0x01\n      dup2\n      0x01\n      and\n      iszero\n      0x0100\n      mul\n      sub\n      and\n      0x02\n      swap1\n      div\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_149\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_148)\n    tag_149:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_150:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_150\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2370:2463  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6384:6388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_152\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6419  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6409:6421  _msgSender() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6423:6430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6471:6486  subtractedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6443  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6454  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6444:6456  _msgSender() */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6457  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6458:6465  spender */\n      dup11\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6466  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6470  _allowances[_msgSender()][spender].sub */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6432:6528  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6408  _approve */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6400:6529  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6546:6550  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6539:6550  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6291:6557  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3813:3817  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3849  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3839:3851  _msgSender() */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3853:3862  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3864:3870  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3838  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3829:3871  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3888:3892  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3881:3892  return true */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3727:3899  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4046:4053  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4083  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4084:4089  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4090  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4098  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4072:4099  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4099  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3957:4106  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1318  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1308:1320  _msgSender() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1302  owner */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1304  owner() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1320  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1289:1357  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2119:2120  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2107  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2099:2121  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2091:2164  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2208:2216  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2200:2206  _owner */\n      0x07\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2179:2217  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2236:2244  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2233  _owner */\n      0x07\n      0x01\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2227:2244  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2011:2251  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7934:7935  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7922  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7915:7936  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7972  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8012:8013  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8016:8023  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8025:8031  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8003  _beforeTokenTransfer */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7983:8032  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8075:8081  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8070  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8074  _totalSupply.add */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8082  _totalSupply.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8055  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8043:8082  _totalSupply = _totalSupply.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8136:8142  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8122  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8123:8130  account */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8131  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8135  _balances[account].add */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8113:8143  _balances[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8101  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8102:8109  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8110  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8092:8143  _balances[account] = _balances[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8179:8186  account */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8175:8176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8188:8194  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8195  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7832:8202  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":725:729  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":731:733  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":735:741  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:724  super._beforeTokenTransfer */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":698:742  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:768  paused */\n      tag_53\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":762:770  paused() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":761:770  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":753:817  require(!paused(), \"ERC20Pausable: token transfer while paused\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":590:824  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":860:1173  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:1012  super._beforeTokenTransfer(from, to, amount) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":995:999  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1001:1003  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1005:1011  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:994  super._beforeTokenTransfer */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":968:1012  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1043:1044  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1045  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1031  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1027:1045  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1023:1167  if (from == address(0)) { // When minting tokens... */\n      iszero\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1126  cap() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1124  cap */\n      tag_43\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1121:1126  cap() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1117  totalSupply().add(amount) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1110:1116  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1105  totalSupply() */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1103  totalSupply */\n      tag_36\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1105  totalSupply() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1109  totalSupply().add */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1117  totalSupply().add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1092:1126  totalSupply().add(amount) <= cap() */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1084:1156  require(totalSupply().add(amount) <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x19\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x45524332304361707065643a2063617020657863656564656400000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":1023:1167  if (from == address(0)) { // When minting tokens... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":860:1173  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10701:10793  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_88:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":651:666  address payable */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":685:695  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":678:695  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":598:702  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9473:9474  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9461  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9456:9475  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9448:9516  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9553:9554  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9541  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9534:9555  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9526:9594  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9635:9641  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9616  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9617:9622  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9623  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9624:9631  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9632  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9605:9641  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9672:9679  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9665:9670  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9681:9687  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9656:9688  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9695  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7154:7155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7142  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7136:7156  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7128:7198  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7237:7238  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7225  recipient */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7216:7239  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7208:7279  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7311:7317  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7319:7328  recipient */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7330:7336  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7310  _beforeTokenTransfer */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7290:7337  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7390:7396  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7377  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7378:7384  sender */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7385  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7389  _balances[sender].sub */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7368:7439  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7357  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7358:7364  sender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7365  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7348:7439  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7497:7503  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7481  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7482:7491  recipient */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7492  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7496  _balances[recipient].add */\n      tag_85\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7472:7504  _balances[recipient].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7458  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7459:7468  recipient */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7469  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7449:7504  _balances[recipient] = _balances[recipient].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7536:7545  recipient */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7534  sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7553  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7519:7554  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7561  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5518:5525  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5550:5551  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5546  b */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5545:5551  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5553:5565  errorMessage */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5537:5566  require(b <= a, errorMessage) */\n      swap1\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_198:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_200\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_198)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_201\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_201:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5587:5588  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5584  a */\n      dup5\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5583:5588  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5576:5588  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":5432:5595  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1631:1637  paused */\n      tag_53\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1631:1639  paused() */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1623:1664  require(paused(), \"Pausable: not paused\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2132:2137  false */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2122:2129  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2122:2137  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      tag_206\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2161:2171  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2161:2173  _msgSender() */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2152:2174  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2064:2181  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8932  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8624:8625  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8605:8626  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8605:8612  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8605:8626  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8597:8664  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8675:8724  _beforeTokenTransfer(account, address(0), amount) */\n      tag_209\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8696:8703  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8714  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8717:8723  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8675:8695  _beforeTokenTransfer */\n      tag_169\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8675:8724  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8779:8785  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd\n      0x22\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8765  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8774  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8766:8773  account */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8774  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8778  _balances[account].sub */\n      tag_106\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8756:8824  _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8735:8744  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8735:8753  _balances[account] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8745:8752  account */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8735:8753  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8735:8824  _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\") */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8849:8873  _totalSupply.sub(amount) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8872  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8849:8861  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8849:8865  _totalSupply.sub */\n      tag_212\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8849:8873  _totalSupply.sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8834:8846  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8834:8873  _totalSupply = _totalSupply.sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8914:8915  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8897:8904  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8918:8924  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8888:8925  Transfer(account, address(0), amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8522:8932  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n    tag_145:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      tag_214\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1366:1372  paused */\n      tag_53\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1366:1374  paused() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1365:1374  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1357:1395  require(!paused(), \"Pausable: paused\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x10\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1886:1890  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1876:1883  _paused */\n      0x07\n      0x00\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1876:1890  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      tag_217\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1912:1922  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1912:1924  _msgSender() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1905:1925  Paused(_msgSender()) */\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1817:1932  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/mtb.sol\":1023:1212  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r... */\n    tag_169:\n        /* \"contracts/mtb.sol\":1159:1203  super._beforeTokenTransfer(from, to, amount) */\n      tag_219\n        /* \"contracts/mtb.sol\":1186:1190  from */\n      dup4\n        /* \"contracts/mtb.sol\":1192:1194  to */\n      dup4\n        /* \"contracts/mtb.sol\":1196:1202  amount */\n      dup4\n        /* \"contracts/mtb.sol\":1159:1185  super._beforeTokenTransfer */\n      tag_86\n        /* \"contracts/mtb.sol\":1159:1203  super._beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_219:\n        /* \"contracts/mtb.sol\":1023:1212  function _beforeTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Capped, ERC20Pausable) {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd 45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db 45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365\n    data_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f 45524332303a206275726e2066726f6d20746865207a65726f2061646472657373\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n    data_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4 45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564\n\n    auxdata: 0xa2646970667358221220038031db5c6f431ef6974a778bc2ee95bf7e9b44cdbe942ed4daec0a065ec27e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620028f8380380620028f8833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b50604052602001805190602001909291905050508083838160039080519060200190620001dd929190620007d9565b508060049080519060200190620001f6929190620007d9565b506012600560006101000a81548160ff021916908360ff1602179055505050600081116200028c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f45524332304361707065643a206361702069732030000000000000000000000081525060200191505060405180910390fd5b80600681905550506000600760006101000a81548160ff0219169083151502179055506000620002c16200037b60201b60201c565b905080600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3506200037233826200038360201b60201c565b5050506200087f565b600033905090565b6200039a82826200039e60201b6200110b1760201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b62000456600083836200057c60201b60201c565b62000472816002546200059960201b620012d21790919060201c565b600281905550620004d0816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200059960201b620012d21790919060201c565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b620005948383836200062260201b6200135a1760201c565b505050565b60008082840190508381101562000618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6200063a838383620006a760201b620013c81760201c565b6200064a620007a960201b60201c565b15620006a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180620028ce602a913960400191505060405180910390fd5b505050565b620006bf838383620007c060201b620014a41760201c565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620007a45762000705620007c560201b60201c565b6200072e826200071a620007cf60201b60201c565b6200059960201b620012d21790919060201c565b1115620007a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b6000600760009054906101000a900460ff16905090565b505050565b6000600654905090565b6000600254905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200081c57805160ff19168380011785556200084d565b828001600101855582156200084d579182015b828111156200084c5782518255916020019190600101906200082f565b5b5090506200085c919062000860565b5090565b5b808211156200087b57600081600090555060010162000861565b5090565b61203f806200088f6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b41146104a3578063a457c2d714610526578063a9059cbb1461058a578063dd62ed3e146105ee578063f2fde38b146106665761012c565b806370a08231146103b5578063715018a61461040d57806379cc6790146104175780638456cb59146104655780638da5cb5b1461046f5761012c565b8063355274ea116100f4578063355274ea146102db57806339509351146102f95780633f4ba83a1461035d57806342966c68146103675780635c975abb146103955761012c565b806306fdde0314610131578063095ea7b3146101b457806318160ddd1461021857806323b872dd14610236578063313ce567146102ba575b600080fd5b6101396106aa565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561017957808201518184015260208101905061015e565b50505050905090810190601f1680156101a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610200600480360360408110156101ca57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061074c565b60405180821515815260200191505060405180910390f35b61022061076a565b6040518082815260200191505060405180910390f35b6102a26004803603606081101561024c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610774565b60405180821515815260200191505060405180910390f35b6102c261084d565b604051808260ff16815260200191505060405180910390f35b6102e3610864565b6040518082815260200191505060405180910390f35b6103456004803603604081101561030f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061086e565b60405180821515815260200191505060405180910390f35b610365610921565b005b6103936004803603602081101561037d57600080fd5b81019080803590602001909291905050506109da565b005b61039d6109ee565b60405180821515815260200191505060405180910390f35b6103f7600480360360208110156103cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a05565b6040518082815260200191505060405180910390f35b610415610a4d565b005b6104636004803603604081101561042d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610bbd565b005b61046d610c1f565b005b610477610cd8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104ab610d02565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104eb5780820151818401526020810190506104d0565b50505050905090810190601f1680156105185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6105726004803603604081101561053c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610da4565b60405180821515815260200191505060405180910390f35b6105d6600480360360408110156105a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610e71565b60405180821515815260200191505060405180910390f35b6106506004803603604081101561060457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e8f565b6040518082815260200191505060405180910390f35b6106a86004803603602081101561067c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f16565b005b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107425780601f1061071757610100808354040283529160200191610742565b820191906000526020600020905b81548152906001019060200180831161072557829003601f168201915b5050505050905090565b60006107606107596114a9565b84846114b1565b6001905092915050565b6000600254905090565b60006107818484846116a8565b6108428461078d6114a9565b61083d85604051806060016040528060288152602001611f0560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006107f36114a9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119699092919063ffffffff16565b6114b1565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000600654905090565b600061091761087b6114a9565b84610912856001600061088c6114a9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d290919063ffffffff16565b6114b1565b6001905092915050565b6109296114a9565b73ffffffffffffffffffffffffffffffffffffffff16610947610cd8565b73ffffffffffffffffffffffffffffffffffffffff16146109d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6109d8611a23565b565b6109eb6109e56114a9565b82611b0e565b50565b6000600760009054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610a556114a9565b73ffffffffffffffffffffffffffffffffffffffff16610a73610cd8565b73ffffffffffffffffffffffffffffffffffffffff1614610afc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000610bfc82604051806060016040528060248152602001611f2d60249139610bed86610be86114a9565b610e8f565b6119699092919063ffffffff16565b9050610c1083610c0a6114a9565b836114b1565b610c1a8383611b0e565b505050565b610c276114a9565b73ffffffffffffffffffffffffffffffffffffffff16610c45610cd8565b73ffffffffffffffffffffffffffffffffffffffff1614610cce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610cd6611cd2565b565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d9a5780601f10610d6f57610100808354040283529160200191610d9a565b820191906000526020600020905b815481529060010190602001808311610d7d57829003601f168201915b5050505050905090565b6000610e67610db16114a9565b84610e6285604051806060016040528060258152602001611fbb6025913960016000610ddb6114a9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119699092919063ffffffff16565b6114b1565b6001905092915050565b6000610e85610e7e6114a9565b84846116a8565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f1e6114a9565b73ffffffffffffffffffffffffffffffffffffffff16610f3c610cd8565b73ffffffffffffffffffffffffffffffffffffffff1614610fc5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561104b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611e976026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b6111ba60008383611dbe565b6111cf816002546112d290919063ffffffff16565b600281905550611226816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600080828401905083811015611350576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6113658383836113c8565b61136d6109ee565b156113c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180611fe0602a913960400191505060405180910390fd5b505050565b6113d38383836114a4565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561149f57611410610864565b61142a8261141c61076a565b6112d290919063ffffffff16565b111561149e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611537576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180611f976024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156115bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611ebd6022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561172e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180611f726025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156117b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611e526023913960400191505060405180910390fd5b6117bf838383611dbe565b61182a81604051806060016040528060268152602001611edf602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119699092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506118bd816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546112d290919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119db5780820151818401526020810190506119c0565b50505050905090810190601f168015611a085780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b611a2b6109ee565b611a9d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f5061757361626c653a206e6f742070617573656400000000000000000000000081525060200191505060405180910390fd5b6000600760006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611ae16114a9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611b94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611f516021913960400191505060405180910390fd5b611ba082600083611dbe565b611c0b81604051806060016040528060228152602001611e75602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119699092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611c6281600254611dce90919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b611cda6109ee565b15611d4d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f5061757361626c653a207061757365640000000000000000000000000000000081525060200191505060405180910390fd5b6001600760006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611d916114a9565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1565b611dc983838361135a565b505050565b600082821115611e46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b81830390509291505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e63654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564a2646970667358221220038031db5c6f431ef6974a778bc2ee95bf7e9b44cdbe942ed4daec0a065ec27e64736f6c634300060c003345524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28F8 CODESIZE SUB DUP1 PUSH3 0x28F8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x60 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x8D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xC3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0xA6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xF1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x12C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x1 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH3 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x180 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x163 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 DUP4 DUP4 DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1DD SWAP3 SWAP2 SWAP1 PUSH3 0x7D9 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x1F6 SWAP3 SWAP2 SWAP1 PUSH3 0x7D9 JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 DUP2 GT PUSH3 0x28C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332304361707065643A2063617020697320300000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x2C1 PUSH3 0x37B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x372 CALLER DUP3 PUSH3 0x383 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH3 0x87F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH3 0x39A DUP3 DUP3 PUSH3 0x39E PUSH1 0x20 SHL PUSH3 0x110B OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x442 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x456 PUSH1 0x0 DUP4 DUP4 PUSH3 0x57C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x472 DUP2 PUSH1 0x2 SLOAD PUSH3 0x599 PUSH1 0x20 SHL PUSH3 0x12D2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x4D0 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH3 0x599 PUSH1 0x20 SHL PUSH3 0x12D2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x594 DUP4 DUP4 DUP4 PUSH3 0x622 PUSH1 0x20 SHL PUSH3 0x135A OR PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH3 0x618 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x63A DUP4 DUP4 DUP4 PUSH3 0x6A7 PUSH1 0x20 SHL PUSH3 0x13C8 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x64A PUSH3 0x7A9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH3 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x28CE PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x6BF DUP4 DUP4 DUP4 PUSH3 0x7C0 PUSH1 0x20 SHL PUSH3 0x14A4 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH3 0x7A4 JUMPI PUSH3 0x705 PUSH3 0x7C5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x72E DUP3 PUSH3 0x71A PUSH3 0x7CF PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x599 PUSH1 0x20 SHL PUSH3 0x12D2 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST GT ISZERO PUSH3 0x7A3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH3 0x81C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x84D JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x84D JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x84C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x82F JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x85C SWAP2 SWAP1 PUSH3 0x860 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x87B JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x861 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0x203F DUP1 PUSH3 0x88F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x666 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x355274EA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x395 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x921 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH2 0xA4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0xC1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x477 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x742 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x717 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x742 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x725 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x760 PUSH2 0x759 PUSH2 0x14A9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x842 DUP5 PUSH2 0x78D PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x83D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F05 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x917 PUSH2 0x87B PUSH2 0x14A9 JUMP JUMPDEST DUP5 PUSH2 0x912 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x88C PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x929 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x947 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D8 PUSH2 0x1A23 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x9E5 PUSH2 0x14A9 JUMP JUMPDEST DUP3 PUSH2 0x1B0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA55 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA73 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F2D PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xBED DUP7 PUSH2 0xBE8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC10 DUP4 PUSH2 0xC0A PUSH2 0x14A9 JUMP JUMPDEST DUP4 PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0xC1A DUP4 DUP4 PUSH2 0x1B0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC27 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC45 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 PUSH2 0x1CD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH2 0xDB1 PUSH2 0x14A9 JUMP JUMPDEST DUP5 PUSH2 0xE62 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDDB PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE85 PUSH2 0xE7E PUSH2 0x14A9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1E PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3C PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E97 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BA PUSH1 0x0 DUP4 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x11CF DUP2 PUSH1 0x2 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1226 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1365 DUP4 DUP4 DUP4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x136D PUSH2 0x9EE JUMP JUMPDEST ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D3 DUP4 DUP4 DUP4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x149F JUMPI PUSH2 0x1410 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x142A DUP3 PUSH2 0x141C PUSH2 0x76A JUMP JUMPDEST PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1537 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F97 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EBD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F72 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E52 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BF DUP4 DUP4 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x182A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EDF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18BD DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A08 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2B PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x1A9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1AE1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F51 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA0 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E75 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C62 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1DCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x9EE JUMP JUMPDEST ISZERO PUSH2 0x1D4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D91 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1DC9 DUP4 DUP4 DUP4 PUSH2 0x135A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1E46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F45524332 ADDRESS POP PUSH2 0x7573 PUSH2 0x626C PUSH6 0x3A20746F6B65 PUSH15 0x207472616E73666572207768696C65 KECCAK256 PUSH17 0x6175736564A26469706673582212200380 BALANCE 0xDB 0x5C PUSH16 0x431EF6974A778BC2EE95BF7E9B44CDBE SWAP5 0x2E 0xD4 0xDA 0xEC EXP MOD 0x5E 0xC2 PUSH31 0x64736F6C634300060C003345524332305061757361626C653A20746F6B656E KECCAK256 PUSH21 0x72616E73666572207768696C652070617573656400 ",
							"sourceMap": "367:976:9:-:0;;;450:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:3;569:4;575:6;2040:5:2;2032;:13;;;;;;;;;;;;:::i;:::-;;2065:7;2055;:17;;;;;;;;;;;;:::i;:::-;;2094:2;2082:9;;:14;;;;;;;;;;;;;;;;;;1958:145;;467:1:4;460:4;:8;452:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;511:4;504;:11;;;;406:116;945:5:8;935:7;;:15;;;;;;;;;;;;;;;;;;884:17:0;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;641:22:9::2;647:10;659:3;641:5;;;:22;;:::i;:::-;450:263:::0;;;367:976;;598:104:7;651:15;685:10;678:17;;598:104;:::o;1220:120:9:-;1304:28;1316:7;1325:6;1304:11;;;;;:28;;:::i;:::-;1220:120;;:::o;7832:370:2:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;;;:49;;:::i;:::-;8058:24;8075:6;8058:12;;:16;;;;;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;1023:189:9:-;1159:44;1186:4;1192:2;1196:6;1159:26;;;;;:44;;:::i;:::-;1023:189;;;:::o;2690:175:1:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;590:234:5:-;698:44;725:4;731:2;735:6;698:26;;;;;:44;;:::i;:::-;762:8;:6;;;:8;;:::i;:::-;761:9;753:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:234;;;:::o;860:313:4:-;968:44;995:4;1001:2;1005:6;968:26;;;;;:44;;:::i;:::-;1043:1;1027:18;;:4;:18;;;1023:144;;;1121:5;:3;;;:5;;:::i;:::-;1092:25;1110:6;1092:13;:11;;;:13;;:::i;:::-;:17;;;;;;:25;;;;:::i;:::-;:34;;1084:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:144;860:313;;;:::o;1052:84:8:-;1099:4;1122:7;;;;;;;;;;;1115:14;;1052:84;:::o;10701:92:2:-;;;;:::o;601:81:4:-;645:7;671:4;;664:11;;601:81;:::o;3235:106:2:-;3296:7;3322:12;;3315:19;;3235:106;:::o;367:976:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4A3 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5EE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x666 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46F JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x355274EA GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x395 JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x15E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x74C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x220 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E3 PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x86E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x365 PUSH2 0x921 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x393 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x37D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x9DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39D PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x415 PUSH2 0xA4D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x463 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x42D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xBBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46D PUSH2 0xC1F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x477 PUSH2 0xCD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AB PUSH2 0xD02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4EB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4D0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x518 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x650 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x604 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF16 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x742 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x717 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x742 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x725 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x760 PUSH2 0x759 PUSH2 0x14A9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP5 DUP5 DUP5 PUSH2 0x16A8 JUMP JUMPDEST PUSH2 0x842 DUP5 PUSH2 0x78D PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x83D DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F05 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x7F3 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x917 PUSH2 0x87B PUSH2 0x14A9 JUMP JUMPDEST DUP5 PUSH2 0x912 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x88C PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x929 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x947 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9D8 PUSH2 0x1A23 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x9EB PUSH2 0x9E5 PUSH2 0x14A9 JUMP JUMPDEST DUP3 PUSH2 0x1B0E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA55 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA73 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAFC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBFC DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F2D PUSH1 0x24 SWAP2 CODECOPY PUSH2 0xBED DUP7 PUSH2 0xBE8 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0xE8F JUMP JUMPDEST PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC10 DUP4 PUSH2 0xC0A PUSH2 0x14A9 JUMP JUMPDEST DUP4 PUSH2 0x14B1 JUMP JUMPDEST PUSH2 0xC1A DUP4 DUP4 PUSH2 0x1B0E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC27 PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC45 PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCCE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 PUSH2 0x1CD2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xD9A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD6F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD9A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD7D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE67 PUSH2 0xDB1 PUSH2 0x14A9 JUMP JUMPDEST DUP5 PUSH2 0xE62 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FBB PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0xDDB PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE85 PUSH2 0xE7E PUSH2 0x14A9 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x16A8 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF1E PUSH2 0x14A9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF3C PUSH2 0xCD8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x104B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E97 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x7 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BA PUSH1 0x0 DUP4 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x11CF DUP2 PUSH1 0x2 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x1226 DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1350 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1365 DUP4 DUP4 DUP4 PUSH2 0x13C8 JUMP JUMPDEST PUSH2 0x136D PUSH2 0x9EE JUMP JUMPDEST ISZERO PUSH2 0x13C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1FE0 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x13D3 DUP4 DUP4 DUP4 PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x149F JUMPI PUSH2 0x1410 PUSH2 0x864 JUMP JUMPDEST PUSH2 0x142A DUP3 PUSH2 0x141C PUSH2 0x76A JUMP JUMPDEST PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST GT ISZERO PUSH2 0x149E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1537 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F97 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1EBD PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F72 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1E52 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17BF DUP4 DUP4 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x182A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1EDF PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x18BD DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x12D2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 DUP4 GT ISZERO DUP3 SWAP1 PUSH2 0x1A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x19DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1A08 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP3 DUP5 SUB SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2B PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x1A9D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1AE1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B94 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1F51 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BA0 DUP3 PUSH1 0x0 DUP4 PUSH2 0x1DBE JUMP JUMPDEST PUSH2 0x1C0B DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E75 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1969 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1C62 DUP2 PUSH1 0x2 SLOAD PUSH2 0x1DCE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1CDA PUSH2 0x9EE JUMP JUMPDEST ISZERO PUSH2 0x1D4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1D91 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x1DC9 DUP4 DUP4 DUP4 PUSH2 0x135A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1E46 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH3 0x75726E KECCAK256 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E63654F776E61 PUSH3 0x6C653A KECCAK256 PUSH15 0x6577206F776E657220697320746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652074 PUSH16 0x20746865207A65726F20616464726573 PUSH20 0x45524332303A207472616E7366657220616D6F75 PUSH15 0x7420657863656564732062616C616E PUSH4 0x65455243 ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20627572 PUSH15 0x20616D6F756E742065786365656473 KECCAK256 PUSH2 0x6C6C PUSH16 0x77616E636545524332303A206275726E KECCAK256 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A207472616E7366657220 PUSH7 0x726F6D20746865 KECCAK256 PUSH27 0x65726F206164647265737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726F45524332 ADDRESS POP PUSH2 0x7573 PUSH2 0x626C PUSH6 0x3A20746F6B65 PUSH15 0x207472616E73666572207768696C65 KECCAK256 PUSH17 0x6175736564A26469706673582212200380 BALANCE 0xDB 0x5C PUSH16 0x431EF6974A778BC2EE95BF7E9B44CDBE SWAP5 0x2E 0xD4 0xDA 0xEC EXP MOD 0x5E 0xC2 PUSH31 0x64736F6C634300060C00330000000000000000000000000000000000000000 ",
							"sourceMap": "367:976:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4244:166;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3235:106;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4877:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3086:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;601:81:4;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5589:215:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;950:65:9;;;:::i;:::-;;524:89:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1052:84:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3399:125:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1717:145:0;;;:::i;:::-;;919:290:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;800:61:9;;;:::i;:::-;;1085:85:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2370:93:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6291:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3727:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3957:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2011:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2168:89:2;2213:13;2245:5;2238:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2168:89;:::o;4244:166::-;4327:4;4343:39;4352:12;:10;:12::i;:::-;4366:7;4375:6;4343:8;:39::i;:::-;4399:4;4392:11;;4244:166;;;;:::o;3235:106::-;3296:7;3322:12;;3315:19;;3235:106;:::o;4877:317::-;4983:4;4999:36;5009:6;5017:9;5028:6;4999:9;:36::i;:::-;5045:121;5054:6;5062:12;:10;:12::i;:::-;5076:89;5114:6;5076:89;;;;;;;;;;;;;;;;;:11;:19;5088:6;5076:19;;;;;;;;;;;;;;;:33;5096:12;:10;:12::i;:::-;5076:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5045:8;:121::i;:::-;5183:4;5176:11;;4877:317;;;;;:::o;3086:89::-;3135:5;3159:9;;;;;;;;;;;3152:16;;3086:89;:::o;601:81:4:-;645:7;671:4;;664:11;;601:81;:::o;5589:215:2:-;5677:4;5693:83;5702:12;:10;:12::i;:::-;5716:7;5725:50;5764:10;5725:11;:25;5737:12;:10;:12::i;:::-;5725:25;;;;;;;;;;;;;;;:34;5751:7;5725:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5693:8;:83::i;:::-;5793:4;5786:11;;5589:215;;;;:::o;950:65:9:-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;997:10:9::1;:8;:10::i;:::-;950:65::o:0;524:89:3:-;579:27;585:12;:10;:12::i;:::-;599:6;579:5;:27::i;:::-;524:89;:::o;1052:84:8:-;1099:4;1122:7;;;;;;;;;;;1115:14;;1052:84;:::o;3399:125:2:-;3473:7;3499:9;:18;3509:7;3499:18;;;;;;;;;;;;;;;;3492:25;;3399:125;;;:::o;1717:145:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;;;;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6;;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;919:290:3:-;995:26;1024:84;1061:6;1024:84;;;;;;;;;;;;;;;;;:32;1034:7;1043:12;:10;:12::i;:::-;1024:9;:32::i;:::-;:36;;:84;;;;;:::i;:::-;995:113;;1119:51;1128:7;1137:12;:10;:12::i;:::-;1151:18;1119:8;:51::i;:::-;1180:22;1186:7;1195:6;1180:5;:22::i;:::-;919:290;;;:::o;800:61:9:-;1308:12:0;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;845:8:9::1;:6;:8::i;:::-;800:61::o:0;1085:85:0:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;2370:93:2:-;2417:13;2449:7;2442:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:93;:::o;6291:266::-;6384:4;6400:129;6409:12;:10;:12::i;:::-;6423:7;6432:96;6471:15;6432:96;;;;;;;;;;;;;;;;;:11;:25;6444:12;:10;:12::i;:::-;6432:25;;;;;;;;;;;;;;;:34;6458:7;6432:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6400:8;:129::i;:::-;6546:4;6539:11;;6291:266;;;;:::o;3727:172::-;3813:4;3829:42;3839:12;:10;:12::i;:::-;3853:9;3864:6;3829:9;:42::i;:::-;3888:4;3881:11;;3727:172;;;;:::o;3957:149::-;4046:7;4072:11;:18;4084:5;4072:18;;;;;;;;;;;;;;;:27;4091:7;4072:27;;;;;;;;;;;;;;;;4065:34;;3957:149;;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;;;;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;;:17;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;7832:370:2:-;7934:1;7915:21;;:7;:21;;;;7907:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7983:49;8012:1;8016:7;8025:6;7983:20;:49::i;:::-;8058:24;8075:6;8058:12;;:16;;:24;;;;:::i;:::-;8043:12;:39;;;;8113:30;8136:6;8113:9;:18;8123:7;8113:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;8092:9;:18;8102:7;8092:18;;;;;;;;;;;;;;;:51;;;;8179:7;8158:37;;8175:1;8158:37;;;8188:6;8158:37;;;;;;;;;;;;;;;;;;7832:370;;:::o;2690:175:1:-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;590:234:5:-;698:44;725:4;731:2;735:6;698:26;:44::i;:::-;762:8;:6;:8::i;:::-;761:9;753:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:234;;;:::o;860:313:4:-;968:44;995:4;1001:2;1005:6;968:26;:44::i;:::-;1043:1;1027:18;;:4;:18;;;1023:144;;;1121:5;:3;:5::i;:::-;1092:25;1110:6;1092:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;:34;;1084:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:144;860:313;;;:::o;10701:92:2:-;;;;:::o;598:104:7:-;651:15;685:10;678:17;;598:104;:::o;9355:340:2:-;9473:1;9456:19;;:5;:19;;;;9448:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9553:1;9534:21;;:7;:21;;;;9526:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9635:6;9605:11;:18;9617:5;9605:18;;;;;;;;;;;;;;;:27;9624:7;9605:27;;;;;;;;;;;;;;;:36;;;;9672:7;9656:32;;9665:5;9656:32;;;9681:6;9656:32;;;;;;;;;;;;;;;;;;9355:340;;;:::o;7031:530::-;7154:1;7136:20;;:6;:20;;;;7128:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7237:1;7216:23;;:9;:23;;;;7208:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7290:47;7311:6;7319:9;7330:6;7290:20;:47::i;:::-;7368:71;7390:6;7368:71;;;;;;;;;;;;;;;;;:9;:17;7378:6;7368:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7348:9;:17;7358:6;7348:17;;;;;;;;;;;;;;;:91;;;;7472:32;7497:6;7472:9;:20;7482:9;7472:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7449:9;:20;7459:9;7449:20;;;;;;;;;;;;;;;:55;;;;7536:9;7519:35;;7528:6;7519:35;;;7547:6;7519:35;;;;;;;;;;;;;;;;;;7031:530;;;:::o;5432:163:1:-;5518:7;5550:1;5545;:6;;5553:12;5537:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5587:1;5583;:5;5576:12;;5432:163;;;;;:::o;2064:117:8:-;1631:8;:6;:8::i;:::-;1623:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2132:5:::1;2122:7;;:15;;;;;;;;;;;;;;;;;;2152:22;2161:12;:10;:12::i;:::-;2152:22;;;;;;;;;;;;;;;;;;;;2064:117::o:0;8522:410:2:-;8624:1;8605:21;;:7;:21;;;;8597:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8675:49;8696:7;8713:1;8717:6;8675:20;:49::i;:::-;8756:68;8779:6;8756:68;;;;;;;;;;;;;;;;;:9;:18;8766:7;8756:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;8735:9;:18;8745:7;8735:18;;;;;;;;;;;;;;;:89;;;;8849:24;8866:6;8849:12;;:16;;:24;;;;:::i;:::-;8834:12;:39;;;;8914:1;8888:37;;8897:7;8888:37;;;8918:6;8888:37;;;;;;;;;;;;;;;;;;8522:410;;:::o;1817:115:8:-;1366:8;:6;:8::i;:::-;1365:9;1357:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1886:4:::1;1876:7;;:14;;;;;;;;;;;;;;;;;;1905:20;1912:12;:10;:12::i;:::-;1905:20;;;;;;;;;;;;;;;;;;;;1817:115::o:0;1023:189:9:-;1159:44;1186:4;1192:2;1196:6;1159:26;:44::i;:::-;1023:189;;;:::o;3136:155:1:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1651000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1409",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1219",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"cap()": "1036",
								"decimals()": "1167",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "1216",
								"pause()": "infinite",
								"paused()": "1166",
								"renounceOwnership()": "24527",
								"symbol()": "infinite",
								"totalSupply()": "1081",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100000000"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 450,
									"end": 713,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 604,
									"end": 607,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 569,
									"end": 573,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 575,
									"end": 581,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2045,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2037,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2032,
									"end": 2045,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2065,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2062,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2055,
									"end": 2072,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2094,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2082,
									"end": 2091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "PUSH",
									"source": 2,
									"value": "FF"
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2082,
									"end": 2096,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1958,
									"end": 2103,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 467,
									"end": 468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 460,
									"end": 464,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 460,
									"end": 468,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "45524332304361707065643A2063617020697320300000000000000000000000"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 452,
									"end": 494,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 452,
									"end": 494,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 511,
									"end": 515,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 508,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 504,
									"end": 515,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 504,
									"end": 515,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 504,
									"end": 515,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 504,
									"end": 515,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 406,
									"end": 522,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 945,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 942,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 935,
									"end": 942,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 935,
									"end": 950,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 884,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 914,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 904,
									"end": 916,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 904,
									"end": 916,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 884,
									"end": 916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 884,
									"end": 916,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 935,
									"end": 944,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 926,
									"end": 932,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 926,
									"end": 944,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 988,
									"end": 989,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 959,
									"end": 1002,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 850,
									"end": 1009,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 641,
									"end": 663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 647,
									"end": 657,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 659,
									"end": 662,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 641,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 641,
									"end": 646,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 641,
									"end": 646,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 641,
									"end": 663,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 641,
									"end": 663,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 641,
									"end": 663,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 641,
									"end": 663,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 641,
									"end": 663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 450,
									"end": 713,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 598,
									"end": 702,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 651,
									"end": 666,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 695,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 678,
									"end": 695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 598,
									"end": 702,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1220,
									"end": 1340,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 1220,
									"end": 1340,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1316,
									"end": 1323,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1325,
									"end": 1331,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18446744073709551700"
								},
								{
									"begin": 1304,
									"end": 1315,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 1304,
									"end": 1332,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1340,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1340,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1220,
									"end": 1340,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7934,
									"end": 7935,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7922,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 7915,
									"end": 7936,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "tag",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7907,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 8012,
									"end": 8013,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8016,
									"end": 8023,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8025,
									"end": 8031,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "43"
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7983,
									"end": 8003,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "tag",
									"source": 2,
									"value": "42"
								},
								{
									"begin": 7983,
									"end": 8032,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 8075,
									"end": 8081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8058,
									"end": 8070,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551701"
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8074,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "tag",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 8058,
									"end": 8082,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8055,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8043,
									"end": 8082,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 8136,
									"end": 8142,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8122,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8123,
									"end": 8130,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8131,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "45"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551701"
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8135,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 8113,
									"end": 8143,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8101,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8102,
									"end": 8109,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8092,
									"end": 8110,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8092,
									"end": 8143,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8179,
									"end": 8186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8175,
									"end": 8176,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8188,
									"end": 8194,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8158,
									"end": 8195,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7832,
									"end": 8202,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1186,
									"end": 1190,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1192,
									"end": 1194,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1159,
									"end": 1185,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1159,
									"end": 1185,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1185,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18446744073709551702"
								},
								{
									"begin": 1159,
									"end": 1185,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1159,
									"end": 1203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1212,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2755,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2767,
									"end": 2776,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2783,
									"end": 2784,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2780,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2784,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2784,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2767,
									"end": 2784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2807,
									"end": 2808,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2803,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2802,
									"end": 2808,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "1B"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 2794,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 2858,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2850,
									"end": 2858,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2690,
									"end": 2865,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 590,
									"end": 824,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 590,
									"end": 824,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 698,
									"end": 742,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 725,
									"end": 729,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 731,
									"end": 733,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 735,
									"end": 741,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 698,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 698,
									"end": 724,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 698,
									"end": 724,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 698,
									"end": 724,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18446744073709551703"
								},
								{
									"begin": 698,
									"end": 724,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 698,
									"end": 742,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 698,
									"end": 742,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 698,
									"end": 742,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 698,
									"end": 742,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 698,
									"end": 742,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 762,
									"end": 770,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 762,
									"end": 768,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 762,
									"end": 768,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 762,
									"end": 768,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 762,
									"end": 770,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 762,
									"end": 770,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 762,
									"end": 770,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 762,
									"end": 770,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 762,
									"end": 770,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 761,
									"end": 770,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "2A"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH data",
									"source": 5,
									"value": "FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "2A"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 753,
									"end": 817,
									"name": "tag",
									"source": 5,
									"value": "57"
								},
								{
									"begin": 753,
									"end": 817,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 590,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 824,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 590,
									"end": 824,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 995,
									"end": 999,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1001,
									"end": 1003,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1005,
									"end": 1011,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 968,
									"end": 994,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 968,
									"end": 994,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 994,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 968,
									"end": 994,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551704"
								},
								{
									"begin": 968,
									"end": 994,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 968,
									"end": 1012,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1044,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1027,
									"end": 1045,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1167,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1167,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1023,
									"end": 1167,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1121,
									"end": 1124,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1121,
									"end": 1124,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1121,
									"end": 1124,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1121,
									"end": 1126,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1110,
									"end": 1116,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1092,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1092,
									"end": 1103,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1103,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 1092,
									"end": 1105,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551701"
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1109,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 1092,
									"end": 1117,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1126,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1092,
									"end": 1126,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "45524332304361707065643A2063617020657863656564656400000000000000"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1084,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1023,
									"end": 1167,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1023,
									"end": 1167,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 860,
									"end": 1173,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1052,
									"end": 1136,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1052,
									"end": 1136,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1099,
									"end": 1103,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "PUSH",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "DIV",
									"source": 8
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "PUSH",
									"source": 8,
									"value": "FF"
								},
								{
									"begin": 1122,
									"end": 1129,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1129,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1115,
									"end": 1129,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1136,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1052,
									"end": 1136,
									"name": "JUMP",
									"source": 8,
									"value": "[out]"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "tag",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 10701,
									"end": 10793,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 601,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 601,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 645,
									"end": 652,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 671,
									"end": 675,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 671,
									"end": 675,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 664,
									"end": 675,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 664,
									"end": 675,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 601,
									"end": 682,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 601,
									"end": 682,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "tag",
									"source": 2,
									"value": "66"
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 3296,
									"end": 3303,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3322,
									"end": 3334,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 3322,
									"end": 3334,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3315,
									"end": 3334,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3315,
									"end": 3334,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3235,
									"end": 3341,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9,
									"value": "[in]"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMP",
									"source": 9,
									"value": "[out]"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 367,
									"end": 1343,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220038031db5c6f431ef6974a778bc2ee95bf7e9b44cdbe942ed4daec0a065ec27e64736f6c634300060c0033",
									".code": [
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "A457C2D7"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "79CC6790"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "355274EA"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "355274EA"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "39509351"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 367,
											"end": 1343,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 601,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 800,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 800,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 800,
											"end": 861,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2213,
											"end": 2226,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2168,
											"end": 2257,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4352,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4352,
											"end": 4364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4373,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4343,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 4343,
											"end": 4382,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4399,
											"end": 4403,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4392,
											"end": 4403,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4244,
											"end": 4410,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3322,
											"end": 3334,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3334,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5009,
											"end": 5015,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5017,
											"end": 5026,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5034,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4999,
											"end": 5008,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4999,
											"end": 5035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5062,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 5062,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5114,
											"end": 5120,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH data",
											"source": 2,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5087,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5094,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5096,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5096,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5109,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5076,
											"end": 5113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5076,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5045,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 5045,
											"end": 5166,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5176,
											"end": 5187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 5194,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3140,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3159,
											"end": 3168,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3175,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 601,
											"end": 682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 645,
											"end": 652,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 675,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 671,
											"end": 675,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 664,
											"end": 675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 664,
											"end": 675,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 601,
											"end": 682,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5702,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5764,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5736,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5737,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5750,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 5725,
											"end": 5763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5725,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5693,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5693,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5793,
											"end": 5797,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5786,
											"end": 5797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5589,
											"end": 5804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 997,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 997,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 950,
											"end": 1015,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 579,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 585,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 585,
											"end": 597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 599,
											"end": 605,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 579,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 579,
											"end": 606,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 524,
											"end": 613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1099,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1122,
											"end": 1129,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1129,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1136,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3508,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3524,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1807,
											"end": 1813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1786,
											"end": 1826,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1836,
											"end": 1842,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1836,
											"end": 1855,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1717,
											"end": 1862,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1021,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1061,
											"end": 1067,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH data",
											"source": 3,
											"value": "A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1043,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "tag",
											"source": 3,
											"value": "135"
										},
										{
											"begin": 1043,
											"end": 1055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 1024,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1024,
											"end": 1060,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 1024,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1108,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 995,
											"end": 1108,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1128,
											"end": 1135,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1137,
											"end": 1147,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 1137,
											"end": 1149,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1151,
											"end": 1169,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1119,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 1119,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 1180,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 919,
											"end": 1209,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 800,
											"end": 861,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 845,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 845,
											"end": 853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 800,
											"end": 861,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1131,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1157,
											"end": 1163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1163,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2417,
											"end": 2430,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2449,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6409,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6409,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6471,
											"end": 6486,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH data",
											"source": 2,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6444,
											"end": 6456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6457,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6458,
											"end": 6465,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6432,
											"end": 6470,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6432,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 6400,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6550,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6291,
											"end": 6557,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3853,
											"end": 3862,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3864,
											"end": 3870,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3829,
											"end": 3838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 3829,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3881,
											"end": 3892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3727,
											"end": 3899,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4046,
											"end": 4053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4089,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4072,
											"end": 4099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4065,
											"end": 4099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3957,
											"end": 4106,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1308,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1289,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 2120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2099,
											"end": 2121,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2091,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2208,
											"end": 2216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2206,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2179,
											"end": 2217,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2236,
											"end": 2244,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2227,
											"end": 2244,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2251,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7934,
											"end": 7935,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7922,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7915,
											"end": 7936,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7907,
											"end": 7972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8025,
											"end": 8031,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7983,
											"end": 8003,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7983,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8075,
											"end": 8081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8058,
											"end": 8070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8058,
											"end": 8074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8058,
											"end": 8082,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8043,
											"end": 8082,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8136,
											"end": 8142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8131,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 8113,
											"end": 8135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8113,
											"end": 8143,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8109,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8110,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8092,
											"end": 8143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8175,
											"end": 8176,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8188,
											"end": 8194,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8195,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7832,
											"end": 8202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 824,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 590,
											"end": 824,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 698,
											"end": 742,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 725,
											"end": 729,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 731,
											"end": 733,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 698,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 698,
											"end": 742,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 762,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 762,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 762,
											"end": 770,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 761,
											"end": 770,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH data",
											"source": 5,
											"value": "FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "2A"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 753,
											"end": 817,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 753,
											"end": 817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 590,
											"end": 824,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 968,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 995,
											"end": 999,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1001,
											"end": 1003,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 968,
											"end": 994,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 968,
											"end": 1012,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 968,
											"end": 1012,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 968,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1031,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1045,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1167,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1167,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1023,
											"end": 1167,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1121,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 1121,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1092,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 1092,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 1092,
											"end": 1109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 1092,
											"end": 1117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1126,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1092,
											"end": 1126,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "45524332304361707065643A2063617020657863656564656400000000000000"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 1084,
											"end": 1156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1023,
											"end": 1167,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 1023,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 860,
											"end": 1173,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10701,
											"end": 10793,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 666,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 695,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 678,
											"end": 695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 598,
											"end": 702,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9473,
											"end": 9474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9461,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9456,
											"end": 9475,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH data",
											"source": 2,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 9448,
											"end": 9516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9553,
											"end": 9554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9555,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH data",
											"source": 2,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 9526,
											"end": 9594,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9635,
											"end": 9641,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9616,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9623,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9631,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9605,
											"end": 9632,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9605,
											"end": 9641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9672,
											"end": 9679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9665,
											"end": 9670,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 9681,
											"end": 9687,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9656,
											"end": 9688,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9355,
											"end": 9695,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7154,
											"end": 7155,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7142,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7136,
											"end": 7156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH data",
											"source": 2,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7128,
											"end": 7198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH data",
											"source": 2,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7330,
											"end": 7336,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7290,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7290,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH data",
											"source": 2,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7378,
											"end": 7384,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7385,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 7368,
											"end": 7389,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7368,
											"end": 7439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7357,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7358,
											"end": 7364,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7348,
											"end": 7365,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7497,
											"end": 7503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7482,
											"end": 7491,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 7472,
											"end": 7496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7472,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7459,
											"end": 7468,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7469,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7449,
											"end": 7504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7536,
											"end": 7545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7528,
											"end": 7534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7547,
											"end": 7553,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7519,
											"end": 7554,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7031,
											"end": 7561,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5518,
											"end": 5525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5550,
											"end": 5551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5546,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5545,
											"end": 5551,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5584,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5576,
											"end": 5588,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5432,
											"end": 5595,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1631,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 1631,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1623,
											"end": 1664,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2132,
											"end": 2137,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2122,
											"end": 2137,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 8,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2161,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 2161,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2174,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 2064,
											"end": 2181,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8624,
											"end": 8625,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8605,
											"end": 8612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8605,
											"end": 8626,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH data",
											"source": 2,
											"value": "B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8597,
											"end": 8664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8696,
											"end": 8703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8713,
											"end": 8714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8717,
											"end": 8723,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8675,
											"end": 8695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8675,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8779,
											"end": 8785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH data",
											"source": 2,
											"value": "149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8766,
											"end": 8773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 8756,
											"end": 8778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8756,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8744,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8745,
											"end": 8752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8735,
											"end": 8753,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8735,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8866,
											"end": 8872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8849,
											"end": 8861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8849,
											"end": 8865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8849,
											"end": 8873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8834,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8834,
											"end": 8873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 8915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8897,
											"end": 8904,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8918,
											"end": 8924,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8925,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8522,
											"end": 8932,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1366,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1365,
											"end": 1374,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1357,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1886,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1876,
											"end": 1883,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1912,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1912,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1925,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1817,
											"end": 1932,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1203,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1186,
											"end": 1190,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1192,
											"end": 1194,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1159,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 1159,
											"end": 1203,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1159,
											"end": 1203,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1159,
											"end": 1203,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1212,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"149B126E7125232B4200AF45303D04FBA8B74653B1A295A6A561A528C33FEFDD": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"A287C363786607A1457A2D9D12FA61C0073358E02D76B4035FC2C2D86A19C0DB": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
										"B16788493B576042BB52C50ED56189E0B250DB113C7BFB1C3897D25CF9632D7F": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
										"FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564"
									}
								},
								"FCB1FC9F3615FD38AB90D28B50A608758C295EEACBD5840421A4EE3B0DF2F1F4": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564"
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mtb.sol\":\"MTB\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xca0c2396dbeb3503b51abf4248ebf77a1461edad513c01529df51850a012bee3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b44ff44e0496e8554a90f4c0512c28faed45104d40430019f3c67ea67740e\",\"dweb:/ipfs/Qmc3nRapVbcctELoZS5qe17zLkFB3bETBfwzCTMF1CSuGE\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0x9c0eb3b0e11d2480d49991dc384f1e5f9c9b9967cc81944d50916a9b9c6c4984\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e4033d778624992e86f0b6d801a4f6d7b5c0cd5c79c1296be90a051ad5f5af\",\"dweb:/ipfs/QmShYmkUqh6pDEeoWadZ24icmCr4C2Xys1uE5boivPmbwf\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x94e4d02b80450cf26bec54be6c0cf52fe4e8ce91dfc6e97794dce19ded2a3fa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16f5115e0d29a8e2e88ef152dc49c8dfe37d484c2b7ce97ed4532889ac2bda3c\",\"dweb:/ipfs/QmZBKMdf6EdHv7XBSaiN7rgrQwTqNG5q1nD75NPM6ECZYe\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol\":{\"keccak256\":\"0xa22af140ae7ec1f8f2f3bed5869cd0d548dfaac66343f0efc7324ff34aaf1254\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fed479feda7354e89c095fde0927dcb581f460257bf93b7db54b2b902b4bbd48\",\"dweb:/ipfs/QmSDUhS2AQvTGXHwaxDgAXtwXKCgQh2kp1nwhwUgr2hQZK\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]},\"contracts/mtb.sol\":{\"keccak256\":\"0x8127465559eb535f6a747e6894d0f4d609032951b9daeeede1890fd538596d16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b37fdfdd6c0a70760fd3f1115fc0e032e55bddbd30dac0e9e93d4eb6b98e4047\",\"dweb:/ipfs/QmZCFmv8fNiAiNzGushgfD4m3n9D7xv9BqRHKRD5tQRw1K\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 481,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 487,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 489,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 491,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 493,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 495,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1037,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_cap",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1261,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_paused",
								"offset": 0,
								"slot": "7",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "contracts/mtb.sol:MTB",
								"label": "_owner",
								"offset": 1,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 1244,
							"src": "66:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1243,
										"src": "621:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1243",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "621:7:0"
								}
							],
							"contractDependencies": [
								1243
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "97:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								1243
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "635:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "691:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "722:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "690:57:0"
									},
									"src": "664:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "874:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "884:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "884:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "904:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "904:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "884:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "926:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "935:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "926:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "926:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "988:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "980:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "980:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "980:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "959:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "954:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "754:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:0"
									},
									"scope": 109,
									"src": "850:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1140:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1157:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1150:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1015:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1099:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1131:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1130:9:0"
									},
									"scope": 109,
									"src": "1085:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1279:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1297:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1297:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "1308:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1308:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1297:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1322:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1289:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1289:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1367:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1176:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:0"
									},
									"src": "1258:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1771:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1807:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1823:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1815:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1815:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1815:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1786:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1781:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1836:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1853:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1845:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1845:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1836:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1836:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1381:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1761:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1761:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1743:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1771:0:0"
									},
									"scope": 109,
									"src": "1717:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2081:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2099:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2119:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2111:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2111:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2099:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2123:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2091:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2091:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2208:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2179:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2179:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2174:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2227:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2236:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2227:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2227:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1868:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2071:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2071:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2037:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:0:0"
									},
									"scope": 109,
									"src": "2011:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "592:1661:0"
						}
					],
					"src": "33:2221:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							464
						]
					},
					"id": 465,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 464,
							"linearizedBaseContracts": [
								464
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "865:98:1",
										"statements": [
											{
												"assignments": [
													125
												],
												"declarations": [
													{
														"constant": false,
														"id": 125,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 142,
														"src": "875:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 124,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 126,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "887:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 127,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 117,
														"src": "891:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "906:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "910:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 137,
												"nodeType": "IfStatement",
												"src": "902:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 133,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 135,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 123,
													"id": 136,
													"nodeType": "Return",
													"src": "913:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 139,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 125,
															"src": "954:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 140,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 123,
												"id": 141,
												"nodeType": "Return",
												"src": "940:16:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "805:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "816:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "850:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 143,
												"src": "856:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:1"
									},
									"scope": 464,
									"src": "789:174:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 169,
										"nodeType": "Block",
										"src": "1185:75:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "1199:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 156,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1203:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 162,
												"nodeType": "IfStatement",
												"src": "1195:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 160,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 154,
													"id": 161,
													"nodeType": "Return",
													"src": "1206:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 165,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 148,
																"src": "1251:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 167,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 154,
												"id": 168,
												"nodeType": "Return",
												"src": "1233:20:1"
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:1",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 170,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1136:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1170:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 150,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 170,
												"src": "1176:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:1"
									},
									"scope": 464,
									"src": "1109:151:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 210,
										"nodeType": "Block",
										"src": "1484:359:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 182,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1716:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 189,
												"nodeType": "IfStatement",
												"src": "1712:28:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 187,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 188,
													"nodeType": "Return",
													"src": "1724:16:1"
												}
											},
											{
												"assignments": [
													191
												],
												"declarations": [
													{
														"constant": false,
														"id": 191,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 210,
														"src": "1750:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 195,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 192,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1762:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 193,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1766:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1781:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 197,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "1785:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "1790:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1777:33:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 203,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 181,
													"id": 204,
													"nodeType": "Return",
													"src": "1793:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "1834:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 208,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 181,
												"id": 209,
												"nodeType": "Return",
												"src": "1820:16:1"
											}
										]
									},
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1424:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1435:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1469:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 211,
												"src": "1475:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:1"
									},
									"scope": 464,
									"src": "1408:435:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "2068:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 223,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2082:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 230,
												"nodeType": "IfStatement",
												"src": "2078:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 228,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 222,
													"id": 229,
													"nodeType": "Return",
													"src": "2090:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 232,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "2131:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "2135:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 235,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 222,
												"id": 236,
												"nodeType": "Return",
												"src": "2117:20:1"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2019:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:1"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2053:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 218,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 238,
												"src": "2059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:1"
									},
									"scope": 464,
									"src": "1992:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2379:76:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 250,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2393:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 257,
												"nodeType": "IfStatement",
												"src": "2389:29:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 255,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 249,
													"id": 256,
													"nodeType": "Return",
													"src": "2401:17:1"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 259,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "2442:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "2446:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 262,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 249,
												"id": 263,
												"nodeType": "Return",
												"src": "2428:20:1"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2319:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2330:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2364:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 265,
												"src": "2370:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:1"
									},
									"scope": 464,
									"src": "2303:152:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "2757:108:1",
										"statements": [
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 290,
														"src": "2767:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 280,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "2779:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "2783:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 282,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "2802:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 281,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 288,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 276,
													"src": "2857:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 274,
												"id": 289,
												"nodeType": "Return",
												"src": "2850:8:1"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2703:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2714:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:1"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 291,
												"src": "2748:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:1"
									},
									"scope": 464,
									"src": "2690:175:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "3203:88:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 302,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 296,
																"src": "3221:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 303,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "3226:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 308,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "3279:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 309,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "3283:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 300,
												"id": 311,
												"nodeType": "Return",
												"src": "3272:12:1"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3149:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3160:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:1"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 313,
												"src": "3194:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 298,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:1"
									},
									"scope": 464,
									"src": "3136:155:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3605:148:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 323,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3619:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 328,
												"nodeType": "IfStatement",
												"src": "3615:20:1",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 322,
													"id": 327,
													"nodeType": "Return",
													"src": "3627:8:1"
												}
											},
											{
												"assignments": [
													330
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 346,
														"src": "3645:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 329,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 331,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "3657:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 332,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "3661:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 330,
																	"src": "3680:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 337,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 316,
																	"src": "3684:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 339,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3689:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 335,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 344,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 330,
													"src": "3745:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 322,
												"id": 345,
												"nodeType": "Return",
												"src": "3738:8:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3551:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3562:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:1"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 347,
												"src": "3596:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:1"
									},
									"scope": 464,
									"src": "3538:215:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "4284:83:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 364,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4355:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 365,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 367,
												"nodeType": "Return",
												"src": "4348:12:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4230:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4241:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 369,
												"src": "4275:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:1"
									},
									"scope": 464,
									"src": "4217:150:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4887:81:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "4905:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "4956:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4960:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 389,
												"nodeType": "Return",
												"src": "4949:12:1"
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4833:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4844:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 391,
												"src": "4878:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:1"
									},
									"scope": 464,
									"src": "4820:148:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "5527:68:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 404,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "5545:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5550:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 407,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "5553:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 410,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 394,
														"src": "5583:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 411,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "5587:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 413,
												"nodeType": "Return",
												"src": "5576:12:1"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5445:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5456:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5467:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 397,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:1"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 415,
												"src": "5518:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:1"
									},
									"scope": 464,
									"src": "5432:163:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "6347:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 428,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6365:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6369:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 431,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "6372:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 427,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6357:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6357:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "6357:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 434,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 418,
														"src": "6402:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 435,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6406:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6402:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 437,
												"nodeType": "Return",
												"src": "6395:12:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "5601:646:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6265:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6287:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 421,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6287:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6264:50:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 439,
												"src": "6338:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6337:9:1"
									},
									"scope": 464,
									"src": "6252:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "7155:67:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 452,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 444,
																"src": "7173:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7177:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7173:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 455,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7180:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7165:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "7165:28:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 458,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "7210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 459,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7214:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7210:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 461,
												"nodeType": "Return",
												"src": "7203:12:1"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "6420:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7073:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7073:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7084:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7095:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7095:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7072:50:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 463,
												"src": "7146:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7145:9:1"
									},
									"scope": 464,
									"src": "7060:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 465,
							"src": "630:6594:1"
						}
					],
					"src": "33:7192:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"ERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 466,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 467,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 1244,
							"src": "66:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 468,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 1221,
							"src": "100:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 469,
							"nodeType": "ImportDirective",
							"scope": 968,
							"sourceUnit": 465,
							"src": "123:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 471,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1243,
										"src": "1339:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1243",
											"typeString": "contract Context"
										}
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1339:7:2"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 473,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1220,
										"src": "1348:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1220",
											"typeString": "contract IERC20"
										}
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1348:6:2"
								}
							],
							"contractDependencies": [
								1220,
								1243
							],
							"contractKind": "contract",
							"documentation": {
								"id": 470,
								"nodeType": "StructuredDocumentation",
								"src": "158:1162:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 967,
							"linearizedBaseContracts": [
								967,
								1220,
								1243
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 477,
									"libraryName": {
										"contractScope": null,
										"id": 475,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "1367:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1361:27:2",
									"typeName": {
										"id": 476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1380:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 481,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1394:46:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 480,
										"keyType": {
											"id": 478,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1403:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1394:28:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 479,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1414:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 487,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1447:69:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 486,
										"keyType": {
											"id": 482,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1456:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1447:49:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 485,
											"keyType": {
												"id": 483,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1476:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1467:28:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 484,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1487:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 489,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1523:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 488,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1523:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 491,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1558:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 490,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1558:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 493,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1584:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 492,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1584:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 495,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 967,
									"src": "1612:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 494,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "1612:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "2022:81:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 503,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2032:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 504,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2040:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2032:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "2032:13:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 507,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 508,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2065:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2055:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 510,
												"nodeType": "ExpressionStatement",
												"src": "2055:17:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 511,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "2082:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "3138",
														"id": 512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2094:2:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2082:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2082:14:2"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1642:311:2",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 516,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "1971:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 497,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1971:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 516,
												"src": "1992:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 499,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1970:44:2"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:0:2"
									},
									"scope": 967,
									"src": "1958:145:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2228:29:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 522,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "2245:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 521,
												"id": 523,
												"nodeType": "Return",
												"src": "2238:12:2"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2109:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:2:2"
									},
									"returnParameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 525,
												"src": "2213:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2213:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2212:15:2"
									},
									"scope": 967,
									"src": "2168:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "2432:31:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 531,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 493,
													"src": "2449:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 530,
												"id": 532,
												"nodeType": "Return",
												"src": "2442:14:2"
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "2263:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2385:2:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 534,
												"src": "2417:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2417:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2416:15:2"
									},
									"scope": 967,
									"src": "2370:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 542,
										"nodeType": "Block",
										"src": "3142:33:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 540,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 495,
													"src": "3159:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 539,
												"id": 541,
												"nodeType": "Return",
												"src": "3152:16:2"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "2469:612:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3103:2:2"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 543,
												"src": "3135:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 537,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3135:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3134:7:2"
									},
									"scope": 967,
									"src": "3086:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1151
									],
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3305:36:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 550,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 489,
													"src": "3322:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 551,
												"nodeType": "Return",
												"src": "3315:19:2"
											}
										]
									},
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "3181:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 546,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3278:8:2"
									},
									"parameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:2:2"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 553,
												"src": "3296:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3295:9:2"
									},
									"scope": 967,
									"src": "3235:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1159
									],
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "3482:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 562,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "3499:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 564,
													"indexExpression": {
														"argumentTypes": null,
														"id": 563,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3499:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 561,
												"id": 565,
												"nodeType": "Return",
												"src": "3492:25:2"
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "3347:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 558,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3455:8:2"
									},
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "3418:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3418:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3417:17:2"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 567,
												"src": "3473:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3473:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3472:9:2"
									},
									"scope": 967,
									"src": "3399:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1169
									],
									"body": {
										"id": 587,
										"nodeType": "Block",
										"src": "3819:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 579,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "3839:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3839:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 581,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "3853:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "3864:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 578,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3829:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3829:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "3829:42:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3888:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 577,
												"id": 586,
												"nodeType": "Return",
												"src": "3881:11:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "3530:192:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 574,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3795:8:2"
									},
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3745:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3764:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3744:35:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 588,
												"src": "3813:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3813:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3812:6:2"
									},
									"scope": 967,
									"src": "3727:172:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1179
									],
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "4055:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 599,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "4072:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 601,
														"indexExpression": {
															"argumentTypes": null,
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "4084:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4072:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 603,
													"indexExpression": {
														"argumentTypes": null,
														"id": 602,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "4091:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4072:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 598,
												"id": 604,
												"nodeType": "Return",
												"src": "4065:34:2"
											}
										]
									},
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3905:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 595,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4028:8:2"
									},
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3976:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3976:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "3991:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3991:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3975:32:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 606,
												"src": "4046:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4046:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4045:9:2"
									},
									"scope": 967,
									"src": "3957:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1189
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "4333:77:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 618,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "4352:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4352:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "4366:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 621,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "4375:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "4343:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4343:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4343:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4399:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 616,
												"id": 625,
												"nodeType": "Return",
												"src": "4392:11:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "4112:127:2",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4309:8:2"
									},
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4261:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4278:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4278:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4260:33:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 627,
												"src": "4327:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4327:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4326:6:2"
									},
									"scope": 967,
									"src": "4244:166:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1201
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4989:205:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 641,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5009:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 642,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5017:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 643,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "5028:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "4999:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4999:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4999:36:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 647,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "5054:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 648,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "5062:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5062:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 657,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "5114:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5122:42:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 650,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "5076:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 652,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 651,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 630,
																			"src": "5088:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5076:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 655,
																	"indexExpression": {
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 653,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "5096:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5096:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5076:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "5076:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5076:89:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5045:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5045:121:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "5045:121:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5183:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 639,
												"id": 663,
												"nodeType": "Return",
												"src": "5176:11:2"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "4416:456:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 636,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4965:8:2"
									},
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4899:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4915:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4915:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4934:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4934:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4898:51:2"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "4983:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 637,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4983:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4982:6:2"
									},
									"scope": 967,
									"src": "4877:317:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "5683:121:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 676,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "5702:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5702:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 678,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5716:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 686,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5764:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 679,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "5725:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 682,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 680,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1231,
																				"src": "5737:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5737:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5725:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 684,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 683,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "5751:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5725:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 291,
																"src": "5725:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5725:50:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "5693:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "5693:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5793:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 674,
												"id": 691,
												"nodeType": "Return",
												"src": "5786:11:2"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "5200:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5616:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5633:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5633:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5615:37:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 693,
												"src": "5677:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5676:6:2"
									},
									"scope": 967,
									"src": "5589:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "6390:167:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 704,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "6409:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6409:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 696,
															"src": "6423:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 714,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "6471:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6488:39:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 707,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "6432:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 710,
																		"indexExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 708,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1231,
																				"src": "6444:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6444:12:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6432:25:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 712,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 711,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 696,
																		"src": "6458:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6432:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "6432:38:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6432:96:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "6400:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6400:129:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "6400:129:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6546:4:2",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 702,
												"id": 720,
												"nodeType": "Return",
												"src": "6539:11:2"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "5810:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6335:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6335:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6317:42:2"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 722,
												"src": "6384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6383:6:2"
									},
									"scope": 967,
									"src": "6291:266:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "7118:443:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 733,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "7136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7154:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7146:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 734,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7146:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7146:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7136:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7128:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7128:70:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 741,
												"nodeType": "ExpressionStatement",
												"src": "7128:70:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 743,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "7216:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7237:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7229:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 744,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7229:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7229:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7216:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7241:37:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 742,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "7208:71:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 753,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7311:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 754,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7319:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 755,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7330:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7290:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7290:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "7290:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 758,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7348:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 760,
														"indexExpression": {
															"argumentTypes": null,
															"id": 759,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7358:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7348:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 765,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "7390:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 766,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7398:40:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 761,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "7368:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 763,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 762,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "7378:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7368:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "7368:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 767,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7368:71:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7348:91:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "7348:91:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 770,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "7449:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 772,
														"indexExpression": {
															"argumentTypes": null,
															"id": 771,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7459:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7449:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 777,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 729,
																"src": "7497:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 773,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "7472:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 775,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 774,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 727,
																	"src": "7482:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7472:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "7472:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7472:32:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7449:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "7449:55:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 782,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "7528:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 783,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "7536:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 784,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "7547:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 781,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "7519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7519:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 786,
												"nodeType": "EmitStatement",
												"src": "7514:40:2"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "6563:463:2",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7066:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7066:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 788,
												"src": "7085:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7085:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7049:51:2"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7118:0:2"
									},
									"scope": 967,
									"src": "7031:530:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "7897:305:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 797,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "7915:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7934:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7926:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7926:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7926:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "7915:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7938:33:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7907:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "7907:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8004:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8004:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8004:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 811,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8016:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 812,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8025:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 806,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7983:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7983:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "7983:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 815,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "8043:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 818,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "8075:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 816,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "8058:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "8058:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8058:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8043:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "8043:39:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 822,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "8092:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 824,
														"indexExpression": {
															"argumentTypes": null,
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8102:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8092:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 829,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "8136:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 825,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "8113:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 827,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 826,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 791,
																	"src": "8123:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8113:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 291,
															"src": "8113:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 830,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8113:30:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8092:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 832,
												"nodeType": "ExpressionStatement",
												"src": "8092:51:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8175:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8167:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8167:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 838,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8179:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8188:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 833,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "8158:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8158:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "EmitStatement",
												"src": "8153:42:2"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "7567:260:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 843,
												"src": "7847:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 843,
												"src": "7864:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7846:33:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7897:0:2"
									},
									"scope": 967,
									"src": "7832:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "8587:345:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 852,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 846,
																"src": "8605:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8624:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8616:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 853,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8616:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8616:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8605:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8628:35:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8597:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8597:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "8597:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 862,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8696:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8713:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8705:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 863,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8705:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8705:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 867,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8717:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 861,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "8675:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8675:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 869,
												"nodeType": "ExpressionStatement",
												"src": "8675:49:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 870,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "8735:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 872,
														"indexExpression": {
															"argumentTypes": null,
															"id": 871,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8745:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8735:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 877,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8779:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"argumentTypes": null,
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8787:36:2",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 873,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 481,
																	"src": "8756:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 875,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 874,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "8766:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8756:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 415,
															"src": "8756:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8756:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8735:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "8735:89:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 882,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "8834:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 885,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 848,
																"src": "8866:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 883,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 489,
																"src": "8849:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 313,
															"src": "8849:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8849:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8834:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "8834:39:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 890,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "8897:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8914:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8906:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 891,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8906:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8918:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 889,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "8888:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8888:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "EmitStatement",
												"src": "8883:42:2"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "8208:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "8537:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 899,
												"src": "8554:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8536:33:2"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8587:0:2"
									},
									"scope": 967,
									"src": "8522:410:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9438:257:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 910,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "9456:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9473:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9465:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 911,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9465:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9465:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9456:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9477:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 909,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9448:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "ExpressionStatement",
												"src": "9448:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 920,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "9534:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9553:1:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9545:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 921,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9545:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9545:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9534:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9557:36:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 919,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9526:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9526:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9526:68:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 929,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "9605:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 932,
															"indexExpression": {
																"argumentTypes": null,
																"id": 930,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "9617:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9605:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 933,
														"indexExpression": {
															"argumentTypes": null,
															"id": 931,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9624:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9605:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 934,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "9635:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9605:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "9605:36:2"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 938,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "9665:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 939,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "9672:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 940,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9681:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 937,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "9656:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9656:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "EmitStatement",
												"src": "9651:37:2"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "8938:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9373:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9373:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9388:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9388:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 944,
												"src": "9405:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9405:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9372:48:2"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9438:0:2"
									},
									"scope": 967,
									"src": "9355:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "10076:38:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 950,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "10086:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 951,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "10098:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "10086:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "10086:21:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "9701:312:2",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 955,
												"src": "10042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 946,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "10042:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10041:17:2"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10076:0:2"
									},
									"scope": 967,
									"src": "10018:96:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "10790:3:2",
										"statements": []
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "10120:576:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10731:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10745:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 966,
												"src": "10757:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10757:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10730:42:2"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10790:0:2"
									},
									"scope": 967,
									"src": "10701:92:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 968,
							"src": "1321:9474:2"
						}
					],
					"src": "33:10763:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
					"exportedSymbols": {
						"ERC20Burnable": [
							1026
						]
					},
					"id": 1027,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 970,
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 1244,
							"src": "66:33:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 971,
							"nodeType": "ImportDirective",
							"scope": 1027,
							"sourceUnit": 968,
							"src": "100:21:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 973,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1243,
										"src": "367:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1243",
											"typeString": "contract Context"
										}
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "367:7:3"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 975,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 967,
										"src": "376:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$967",
											"typeString": "contract ERC20"
										}
									},
									"id": 976,
									"nodeType": "InheritanceSpecifier",
									"src": "376:5:3"
								}
							],
							"contractDependencies": [
								967,
								1220,
								1243
							],
							"contractKind": "contract",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "123:208:3",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": false,
							"id": 1026,
							"linearizedBaseContracts": [
								1026,
								967,
								1220,
								1243
							],
							"name": "ERC20Burnable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 979,
									"libraryName": {
										"contractScope": null,
										"id": 977,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "394:8:3",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "388:27:3",
									"typeName": {
										"id": 978,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "407:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "569:44:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 986,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "585:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "585:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 988,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "599:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 985,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "579:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "579:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "579:27:3"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "421:98:3",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 992,
												"src": "538:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "537:16:3"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "569:0:3"
									},
									"scope": 1026,
									"src": "524:89:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "985:224:3",
										"statements": [
											{
												"assignments": [
													1001
												],
												"declarations": [
													{
														"constant": false,
														"id": 1001,
														"mutability": "mutable",
														"name": "decreasedAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1024,
														"src": "995:26:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1000,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "995:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1008,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1061:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1069:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															},
															"value": "ERC20: burn amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_a287c363786607a1457a2d9d12fa61c0073358e02d76b4035fc2c2d86a19c0db",
																"typeString": "literal_string \"ERC20: burn amount exceeds allowance\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1003,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 995,
																	"src": "1034:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1004,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "1043:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1043:12:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 1002,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "1024:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view returns (uint256)"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1024:32:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 415,
														"src": "1024:36:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1024:84:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "995:113:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1013,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "1128:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1014,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "1137:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1137:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1016,
															"name": "decreasedAllowance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1001,
															"src": "1151:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1012,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1119:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1119:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1119:51:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1020,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "1186:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1195:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1019,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "1180:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "1180:22:3"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "619:295:3",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "937:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "954:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "936:33:3"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:3"
									},
									"scope": 1026,
									"src": "919:290:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1027,
							"src": "332:879:3"
						}
					],
					"src": "33:1179:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
					"exportedSymbols": {
						"ERC20Capped": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1028,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1029,
							"nodeType": "ImportDirective",
							"scope": 1106,
							"sourceUnit": 968,
							"src": "66:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1031,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 967,
										"src": "200:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$967",
											"typeString": "contract ERC20"
										}
									},
									"id": 1032,
									"nodeType": "InheritanceSpecifier",
									"src": "200:5:4"
								}
							],
							"contractDependencies": [
								967,
								1220,
								1243
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1030,
								"nodeType": "StructuredDocumentation",
								"src": "89:77:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens."
							},
							"fullyImplemented": false,
							"id": 1105,
							"linearizedBaseContracts": [
								1105,
								967,
								1220,
								1243
							],
							"name": "ERC20Capped",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1035,
									"libraryName": {
										"contractScope": null,
										"id": 1033,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 464,
										"src": "218:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$464",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "212:27:4",
									"typeName": {
										"id": 1034,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "231:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1037,
									"mutability": "mutable",
									"name": "_cap",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1105,
									"src": "245:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1036,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "245:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1054,
										"nodeType": "Block",
										"src": "442:80:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1044,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "460:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "460:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "470:23:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 1043,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "452:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "452:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "452:42:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1050,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "504:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1051,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "511:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "504:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "504:11:4"
											}
										]
									},
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "272:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 1055,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "cap_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1055,
												"src": "419:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "418:14:4"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "442:0:4"
									},
									"scope": 1105,
									"src": "406:116:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "654:28:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1061,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1037,
													"src": "671:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1060,
												"id": 1062,
												"nodeType": "Return",
												"src": "664:11:4"
											}
										]
									},
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "528:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "613:2:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1064,
												"src": "645:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "644:9:4"
									},
									"scope": 1105,
									"src": "601:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "958:215:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1078,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "995:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1079,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "1001:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1080,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "1005:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1075,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "968:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC20Capped_$1105",
																"typeString": "contract super ERC20Capped"
															}
														},
														"id": 1077,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "968:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "968:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "968:44:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1083,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "1027:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1043:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1035:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1084,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1035:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1035:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1027:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "1023:144:4",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "1047:120:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1093,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1071,
																					"src": "1110:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1090,
																						"name": "totalSupply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 553,
																						"src": "1092:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 1091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1092:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 291,
																				"src": "1092:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1092:25:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1095,
																				"name": "cap",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1064,
																				"src": "1121:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1121:5:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1092:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1128:27:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																			"typeString": "literal_string \"ERC20Capped: cap exceeded\""
																		},
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																			"typeString": "literal_string \"ERC20Capped: cap exceeded\""
																		}
																	],
																	"id": 1089,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "1084:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1084:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "1084:72:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "688:167:4",
										"text": " @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - minted tokens must not cause the total supply to go over the cap."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1073,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "949:8:4"
									},
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "890:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "904:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "916:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "889:42:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "958:0:4"
									},
									"scope": 1105,
									"src": "860:313:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1106,
							"src": "167:1008:4"
						}
					],
					"src": "33:1143:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
					"exportedSymbols": {
						"ERC20Pausable": [
							1142
						]
					},
					"id": 1143,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "./ERC20.sol",
							"id": 1108,
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 968,
							"src": "66:21:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "../../utils/Pausable.sol",
							"id": 1109,
							"nodeType": "ImportDirective",
							"scope": 1143,
							"sourceUnit": 1336,
							"src": "88:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1111,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 967,
										"src": "429:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$967",
											"typeString": "contract ERC20"
										}
									},
									"id": 1112,
									"nodeType": "InheritanceSpecifier",
									"src": "429:5:5"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1113,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1335,
										"src": "436:8:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$1335",
											"typeString": "contract Pausable"
										}
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "436:8:5"
								}
							],
							"contractDependencies": [
								967,
								1220,
								1243,
								1335
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1110,
								"nodeType": "StructuredDocumentation",
								"src": "124:269:5",
								"text": " @dev ERC20 token with pausable token transfers, minting and burning.\n Useful for scenarios such as preventing trades until the end of an evaluation\n period, or having an emergency switch for freezing all token transfers in the\n event of a large bug."
							},
							"fullyImplemented": false,
							"id": 1142,
							"linearizedBaseContracts": [
								1142,
								1335,
								967,
								1220,
								1243
							],
							"name": "ERC20Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 1140,
										"nodeType": "Block",
										"src": "688:136:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1128,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "725:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1129,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "731:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1130,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "735:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1125,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "698:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_ERC20Pausable_$1142",
																"typeString": "contract super ERC20Pausable"
															}
														},
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 966,
														"src": "698:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "698:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "ExpressionStatement",
												"src": "698:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "761:9:5",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1134,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "762:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "762:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "45524332305061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "772:44:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															},
															"value": "ERC20Pausable: token transfer while paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fcb1fc9f3615fd38ab90d28b50a608758c295eeacbd5840421a4ee3b0df2f1f4",
																"typeString": "literal_string \"ERC20Pausable: token transfer while paused\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "753:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "753:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "753:64:5"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "451:134:5",
										"text": " @dev See {ERC20-_beforeTokenTransfer}.\n Requirements:\n - the contract must not be paused."
									},
									"id": 1141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1123,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "679:8:5"
									},
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "620:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "634:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1141,
												"src": "646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "619:42:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:0:5"
									},
									"scope": 1142,
									"src": "590:234:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1143,
							"src": "394:432:5"
						}
					],
					"src": "33:794:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1220
						]
					},
					"id": 1221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1144,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1145,
								"nodeType": "StructuredDocumentation",
								"src": "66:70:6",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1220,
							"linearizedBaseContracts": [
								1220
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "160:66:6",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "251:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1151,
												"src": "277:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "277:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "276:9:6"
									},
									"scope": 1220,
									"src": "231:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "292:72:6",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1159,
												"src": "388:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "387:17:6"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1159,
												"src": "428:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "427:9:6"
									},
									"scope": 1220,
									"src": "369:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "443:209:6",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1169,
												"src": "675:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "675:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1169,
												"src": "694:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "674:35:6"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1169,
												"src": "728:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "728:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "727:6:6"
									},
									"scope": 1220,
									"src": "657:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "740:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "1028:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:32:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1179,
												"src": "1083:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1083:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1082:9:6"
									},
									"scope": 1220,
									"src": "1009:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "1098:642:6",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1189,
												"src": "1762:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1189,
												"src": "1779:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1761:33:6"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1189,
												"src": "1813:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1813:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1812:6:6"
									},
									"scope": 1220,
									"src": "1745:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1825:296:6",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "2148:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2148:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "2164:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2164:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "2183:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2147:51:6"
									},
									"returnParameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1201,
												"src": "2217:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2216:6:6"
									},
									"scope": 1220,
									"src": "2126:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "2229:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 1210,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "2407:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "2429:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1210,
												"src": "2449:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2406:57:6"
									},
									"src": "2392:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "2470:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 1219,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1219,
												"src": "2638:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1219,
												"src": "2661:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1219,
												"src": "2686:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2637:63:6"
									},
									"src": "2623:78:6"
								}
							],
							"scope": 1221,
							"src": "137:2566:6"
						}
					],
					"src": "33:2671:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1243
						]
					},
					"id": 1244,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1222,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1243,
							"linearizedBaseContracts": [
								1243
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "668:34:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1227,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "685:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "685:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1226,
												"id": 1229,
												"nodeType": "Return",
												"src": "678:17:7"
											}
										]
									},
									"documentation": null,
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "617:2:7"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1231,
												"src": "651:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "650:17:7"
									},
									"scope": 1243,
									"src": "598:104:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "773:165:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1236,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "783:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$1243",
														"typeString": "contract Context"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "783:4:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1238,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "923:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "923:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1235,
												"id": 1240,
												"nodeType": "Return",
												"src": "916:15:7"
											}
										]
									},
									"documentation": null,
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1242,
												"src": "759:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "758:14:7"
									},
									"scope": 1243,
									"src": "708:230:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1244,
							"src": "566:374:7"
						}
					],
					"src": "33:908:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							1335
						]
					},
					"id": 1336,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1245,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "./Context.sol",
							"id": 1246,
							"nodeType": "ImportDirective",
							"scope": 1336,
							"sourceUnit": 1244,
							"src": "66:23:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1248,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1243,
										"src": "561:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$1243",
											"typeString": "contract Context"
										}
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "561:7:8"
								}
							],
							"contractDependencies": [
								1243
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "91:439:8",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1335,
							"linearizedBaseContracts": [
								1335,
								1243
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "575:73:8",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 1254,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1254,
												"src": "666:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "666:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "665:17:8"
									},
									"src": "653:30:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "689:70:8",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 1259,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1259,
												"src": "779:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "779:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "778:17:8"
									},
									"src": "764:32:8"
								},
								{
									"constant": false,
									"id": 1261,
									"mutability": "mutable",
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1335,
									"src": "802:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1260,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "802:4:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "925:32:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1265,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "935:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "945:5:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "935:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "935:15:8"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "829:67:8",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1270,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:0:8"
									},
									"scope": 1335,
									"src": "901:56:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1105:31:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1276,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1261,
													"src": "1122:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1277,
												"nodeType": "Return",
												"src": "1115:14:8"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "963:84:8",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:2:8"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1279,
												"src": "1099:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1273,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1099:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1098:6:8"
									},
									"scope": 1335,
									"src": "1052:84:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "1347:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1365:9:8",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1283,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "1366:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1366:8:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:18:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1357:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1357:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "1357:38:8"
											},
											{
												"id": 1289,
												"nodeType": "PlaceholderStatement",
												"src": "1405:1:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "1142:175:8",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1291,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:2:8"
									},
									"src": "1322:91:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "1613:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1295,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "1631:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1631:8:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1641:22:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1623:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1623:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "1623:41:8"
											},
											{
												"id": 1300,
												"nodeType": "PlaceholderStatement",
												"src": "1674:1:8"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "1419:167:8",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1302,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:2:8"
									},
									"src": "1591:91:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "1866:66:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1308,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "1876:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1886:4:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1876:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "1876:14:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1313,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "1912:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1912:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1312,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "1905:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1905:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1316,
												"nodeType": "EmitStatement",
												"src": "1900:25:8"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "1688:124:8",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1306,
											"modifierName": {
												"argumentTypes": null,
												"id": 1305,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1291,
												"src": "1852:13:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1852:13:8"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1832:2:8"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1866:0:8"
									},
									"scope": 1335,
									"src": "1817:115:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1333,
										"nodeType": "Block",
										"src": "2112:69:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1324,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1261,
														"src": "2122:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 1325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2132:5:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2122:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "ExpressionStatement",
												"src": "2122:15:8"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1329,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "2161:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1328,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "2152:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2152:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "EmitStatement",
												"src": "2147:27:8"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "1938:121:8",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1334,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1322,
											"modifierName": {
												"argumentTypes": null,
												"id": 1321,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1302,
												"src": "2101:10:8",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2101:10:8"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2081:2:8"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:8"
									},
									"scope": 1335,
									"src": "2064:117:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1336,
							"src": "531:1652:8"
						}
					],
					"src": "33:2151:8"
				},
				"id": 8
			},
			"contracts/mtb.sol": {
				"ast": {
					"absolutePath": "contracts/mtb.sol",
					"exportedSymbols": {
						"MTB": [
							1433
						]
					},
					"id": 1434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1338,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 968,
							"src": "61:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20Burnable.sol",
							"id": 1339,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1027,
							"src": "118:63:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
							"id": 1340,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1106,
							"src": "183:61:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20Pausable.sol",
							"id": 1341,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 1143,
							"src": "246:63:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1342,
							"nodeType": "ImportDirective",
							"scope": 1434,
							"sourceUnit": 110,
							"src": "311:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1343,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 967,
										"src": "383:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$967",
											"typeString": "contract ERC20"
										}
									},
									"id": 1344,
									"nodeType": "InheritanceSpecifier",
									"src": "383:5:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1345,
										"name": "ERC20Burnable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1026,
										"src": "390:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Burnable_$1026",
											"typeString": "contract ERC20Burnable"
										}
									},
									"id": 1346,
									"nodeType": "InheritanceSpecifier",
									"src": "390:13:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1347,
										"name": "ERC20Capped",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1105,
										"src": "405:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Capped_$1105",
											"typeString": "contract ERC20Capped"
										}
									},
									"id": 1348,
									"nodeType": "InheritanceSpecifier",
									"src": "405:11:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1349,
										"name": "ERC20Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1142,
										"src": "418:13:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20Pausable_$1142",
											"typeString": "contract ERC20Pausable"
										}
									},
									"id": 1350,
									"nodeType": "InheritanceSpecifier",
									"src": "418:13:9"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1351,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "433:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 1352,
									"nodeType": "InheritanceSpecifier",
									"src": "433:7:9"
								}
							],
							"contractDependencies": [
								109,
								967,
								1026,
								1105,
								1142,
								1220,
								1243,
								1335
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1433,
							"linearizedBaseContracts": [
								1433,
								109,
								1142,
								1335,
								1105,
								1026,
								967,
								1220,
								1243
							],
							"name": "MTB",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "630:83:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1369,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "647:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "647:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1371,
															"name": "cap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1358,
															"src": "659:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1368,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1432
														],
														"referencedDeclaration": 1432,
														"src": "641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "641:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "641:22:9"
											}
										]
									},
									"documentation": null,
									"id": 1375,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1361,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1354,
													"src": "569:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"argumentTypes": null,
													"id": 1362,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1356,
													"src": "575:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1363,
											"modifierName": {
												"argumentTypes": null,
												"id": 1360,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 967,
												"src": "563:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$967_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "563:19:9"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 1365,
													"name": "cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1358,
													"src": "604:3:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1366,
											"modifierName": {
												"argumentTypes": null,
												"id": 1364,
												"name": "ERC20Capped",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1105,
												"src": "592:11:9",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1105_$",
													"typeString": "type(contract ERC20Capped)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "592:16:9"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1375,
												"src": "472:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1375,
												"src": "502:20:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "502:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "cap",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1375,
												"src": "534:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "534:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:91:9"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "630:0:9"
									},
									"scope": 1433,
									"src": "450:263:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1383,
										"nodeType": "Block",
										"src": "834:27:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1380,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "845:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:8:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "845:8:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "8456cb59",
									"id": 1384,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1378,
											"modifierName": {
												"argumentTypes": null,
												"id": 1377,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "824:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "824:9:9"
										}
									],
									"name": "pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "814:2:9"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "834:0:9"
									},
									"scope": 1433,
									"src": "800:61:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "986:29:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1389,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "997:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "997:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "997:10:9"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3f4ba83a",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1387,
											"modifierName": {
												"argumentTypes": null,
												"id": 1386,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "976:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "976:9:9"
										}
									],
									"name": "unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "966:2:9"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:9"
									},
									"scope": 1433,
									"src": "950:65:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966,
										1104,
										1141
									],
									"body": {
										"id": 1414,
										"nodeType": "Block",
										"src": "1148:64:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1409,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "1186:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1410,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "1192:2:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1411,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "1196:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1406,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "1159:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_MTB_$1433",
																"typeString": "contract super MTB"
															}
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1141,
														"src": "1159:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1159:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "1159:44:9"
											}
										]
									},
									"documentation": null,
									"id": 1415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1404,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 1401,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 967,
												"src": "1113:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$967",
													"typeString": "contract ERC20"
												}
											},
											{
												"contractScope": null,
												"id": 1402,
												"name": "ERC20Capped",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1105,
												"src": "1120:11:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20Capped_$1105",
													"typeString": "contract ERC20Capped"
												}
											},
											{
												"contractScope": null,
												"id": 1403,
												"name": "ERC20Pausable",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1142,
												"src": "1133:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20Pausable_$1142",
													"typeString": "contract ERC20Pausable"
												}
											}
										],
										"src": "1104:43:9"
									},
									"parameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1415,
												"src": "1053:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1415,
												"src": "1067:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1415,
												"src": "1079:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1052:42:9"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1148:0:9"
									},
									"scope": 1433,
									"src": "1023:189:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										843
									],
									"body": {
										"id": 1431,
										"nodeType": "Block",
										"src": "1293:47:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1427,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "1316:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1428,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "1325:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1424,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -25,
															"src": "1304:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_super$_MTB_$1433",
																"typeString": "contract super MTB"
															}
														},
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "1304:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1304:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1430,
												"nodeType": "ExpressionStatement",
												"src": "1304:28:9"
											}
										]
									},
									"documentation": null,
									"id": 1432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1422,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"contractScope": null,
												"id": 1421,
												"name": "ERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 967,
												"src": "1286:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$967",
													"typeString": "contract ERC20"
												}
											}
										],
										"src": "1277:15:9"
									},
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1432,
												"src": "1235:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1432,
												"src": "1252:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1234:33:9"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:9"
									},
									"scope": 1433,
									"src": "1220:120:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1434,
							"src": "367:976:9"
						}
					],
					"src": "33:1312:9"
				},
				"id": 9
			}
		}
	}
}